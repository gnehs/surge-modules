const t=new Int32Array(2),e=new Float32Array(t.buffer),i=new Float64Array(t.buffer),s=1===new Uint16Array(new Uint8Array([1,0]).buffer)[0];var a,o,n,r,d,b,c,h,p,u,_,l,f,m,y,N,A,F,I,O,T,w,g;!function(t){t[t.UTF8_BYTES=1]="UTF8_BYTES",t[t.UTF16_STRING=2]="UTF16_STRING"}(a||(a={}));class S{constructor(t){this.bytes_=t,this.position_=0,this.text_decoder_=new TextDecoder}static allocate(t){return new S(new Uint8Array(t))}clear(){this.position_=0}bytes(){return this.bytes_}position(){return this.position_}setPosition(t){this.position_=t}capacity(){return this.bytes_.length}readInt8(t){return this.readUint8(t)<<24>>24}readUint8(t){return this.bytes_[t]}readInt16(t){return this.readUint16(t)<<16>>16}readUint16(t){return this.bytes_[t]|this.bytes_[t+1]<<8}readInt32(t){return this.bytes_[t]|this.bytes_[t+1]<<8|this.bytes_[t+2]<<16|this.bytes_[t+3]<<24}readUint32(t){return this.readInt32(t)>>>0}readInt64(t){return BigInt.asIntN(64,BigInt(this.readUint32(t))+(BigInt(this.readUint32(t+4))<<BigInt(32)))}readUint64(t){return BigInt.asUintN(64,BigInt(this.readUint32(t))+(BigInt(this.readUint32(t+4))<<BigInt(32)))}readFloat32(i){return t[0]=this.readInt32(i),e[0]}readFloat64(e){return t[s?0:1]=this.readInt32(e),t[s?1:0]=this.readInt32(e+4),i[0]}writeInt8(t,e){this.bytes_[t]=e}writeUint8(t,e){this.bytes_[t]=e}writeInt16(t,e){this.bytes_[t]=e,this.bytes_[t+1]=e>>8}writeUint16(t,e){this.bytes_[t]=e,this.bytes_[t+1]=e>>8}writeInt32(t,e){this.bytes_[t]=e,this.bytes_[t+1]=e>>8,this.bytes_[t+2]=e>>16,this.bytes_[t+3]=e>>24}writeUint32(t,e){this.bytes_[t]=e,this.bytes_[t+1]=e>>8,this.bytes_[t+2]=e>>16,this.bytes_[t+3]=e>>24}writeInt64(t,e){this.writeInt32(t,Number(BigInt.asIntN(32,e))),this.writeInt32(t+4,Number(BigInt.asIntN(32,e>>BigInt(32))))}writeUint64(t,e){this.writeUint32(t,Number(BigInt.asUintN(32,e))),this.writeUint32(t+4,Number(BigInt.asUintN(32,e>>BigInt(32))))}writeFloat32(i,s){e[0]=s,this.writeInt32(i,t[0])}writeFloat64(e,a){i[0]=a,this.writeInt32(e,t[s?0:1]),this.writeInt32(e+4,t[s?1:0])}getBufferIdentifier(){if(this.bytes_.length<this.position_+4+4)throw new Error("FlatBuffers: ByteBuffer is too short to contain an identifier.");let t="";for(let e=0;e<4;e++)t+=String.fromCharCode(this.readInt8(this.position_+4+e));return t}__offset(t,e){const i=t-this.readInt32(t);return e<this.readInt16(i)?this.readInt16(i+e):0}__union(t,e){return t.bb_pos=e+this.readInt32(e),t.bb=this,t}__string(t,e){t+=this.readInt32(t);const i=this.readInt32(t);t+=4;const s=this.bytes_.subarray(t,t+i);return e===a.UTF8_BYTES?s:this.text_decoder_.decode(s)}__union_with_string(t,e){return"string"==typeof t?this.__string(e):this.__union(t,e)}__indirect(t){return t+this.readInt32(t)}__vector(t){return t+this.readInt32(t)+4}__vector_len(t){return this.readInt32(t+this.readInt32(t))}__has_identifier(t){if(4!=t.length)throw new Error("FlatBuffers: file identifier must be length 4");for(let e=0;e<4;e++)if(t.charCodeAt(e)!=this.readInt8(this.position()+4+e))return!1;return!0}createScalarList(t,e){const i=[];for(let s=0;s<e;++s){const e=t(s);null!==e&&i.push(e)}return i}createObjList(t,e){const i=[];for(let s=0;s<e;++s){const e=t(s);null!==e&&i.push(e.unpack())}return i}}class P{constructor(t){let e;this.minalign=1,this.vtable=null,this.vtable_in_use=0,this.isNested=!1,this.object_start=0,this.vtables=[],this.vector_num_elems=0,this.force_defaults=!1,this.string_maps=null,this.text_encoder=new TextEncoder,e=t||1024,this.bb=S.allocate(e),this.space=e}clear(){this.bb.clear(),this.space=this.bb.capacity(),this.minalign=1,this.vtable=null,this.vtable_in_use=0,this.isNested=!1,this.object_start=0,this.vtables=[],this.vector_num_elems=0,this.force_defaults=!1,this.string_maps=null}forceDefaults(t){this.force_defaults=t}dataBuffer(){return this.bb}asUint8Array(){return this.bb.bytes().subarray(this.bb.position(),this.bb.position()+this.offset())}prep(t,e){t>this.minalign&&(this.minalign=t);const i=1+~(this.bb.capacity()-this.space+e)&t-1;for(;this.space<i+t+e;){const t=this.bb.capacity();this.bb=P.growByteBuffer(this.bb),this.space+=this.bb.capacity()-t}this.pad(i)}pad(t){for(let e=0;e<t;e++)this.bb.writeInt8(--this.space,0)}writeInt8(t){this.bb.writeInt8(this.space-=1,t)}writeInt16(t){this.bb.writeInt16(this.space-=2,t)}writeInt32(t){this.bb.writeInt32(this.space-=4,t)}writeInt64(t){this.bb.writeInt64(this.space-=8,t)}writeFloat32(t){this.bb.writeFloat32(this.space-=4,t)}writeFloat64(t){this.bb.writeFloat64(this.space-=8,t)}addInt8(t){this.prep(1,0),this.writeInt8(t)}addInt16(t){this.prep(2,0),this.writeInt16(t)}addInt32(t){this.prep(4,0),this.writeInt32(t)}addInt64(t){this.prep(8,0),this.writeInt64(t)}addFloat32(t){this.prep(4,0),this.writeFloat32(t)}addFloat64(t){this.prep(8,0),this.writeFloat64(t)}addFieldInt8(t,e,i){(this.force_defaults||e!=i)&&(this.addInt8(e),this.slot(t))}addFieldInt16(t,e,i){(this.force_defaults||e!=i)&&(this.addInt16(e),this.slot(t))}addFieldInt32(t,e,i){(this.force_defaults||e!=i)&&(this.addInt32(e),this.slot(t))}addFieldInt64(t,e,i){(this.force_defaults||e!==i)&&(this.addInt64(e),this.slot(t))}addFieldFloat32(t,e,i){(this.force_defaults||e!=i)&&(this.addFloat32(e),this.slot(t))}addFieldFloat64(t,e,i){(this.force_defaults||e!=i)&&(this.addFloat64(e),this.slot(t))}addFieldOffset(t,e,i){(this.force_defaults||e!=i)&&(this.addOffset(e),this.slot(t))}addFieldStruct(t,e,i){e!=i&&(this.nested(e),this.slot(t))}nested(t){if(t!=this.offset())throw new TypeError("FlatBuffers: struct must be serialized inline.")}notNested(){if(this.isNested)throw new TypeError("FlatBuffers: object serialization must not be nested.")}slot(t){null!==this.vtable&&(this.vtable[t]=this.offset())}offset(){return this.bb.capacity()-this.space}static growByteBuffer(t){const e=t.capacity();if(3221225472&e)throw new Error("FlatBuffers: cannot grow buffer beyond 2 gigabytes.");const i=e<<1,s=S.allocate(i);return s.setPosition(i-e),s.bytes().set(t.bytes(),i-e),s}addOffset(t){this.prep(4,0),this.writeInt32(this.offset()-t+4)}startObject(t){this.notNested(),null==this.vtable&&(this.vtable=[]),this.vtable_in_use=t;for(let e=0;e<t;e++)this.vtable[e]=0;this.isNested=!0,this.object_start=this.offset()}endObject(){if(null==this.vtable||!this.isNested)throw new Error("FlatBuffers: endObject called without startObject");this.addInt32(0);const t=this.offset();let e=this.vtable_in_use-1;for(;e>=0&&0==this.vtable[e];e--);const i=e+1;for(;e>=0;e--)this.addInt16(0!=this.vtable[e]?t-this.vtable[e]:0);this.addInt16(t-this.object_start);const s=2*(i+2);this.addInt16(s);let a=0;const o=this.space;t:for(e=0;e<this.vtables.length;e++){const t=this.bb.capacity()-this.vtables[e];if(s==this.bb.readInt16(t)){for(let e=2;e<s;e+=2)if(this.bb.readInt16(o+e)!=this.bb.readInt16(t+e))continue t;a=this.vtables[e];break}}return a?(this.space=this.bb.capacity()-t,this.bb.writeInt32(this.space,a-t)):(this.vtables.push(this.offset()),this.bb.writeInt32(this.bb.capacity()-t,this.offset()-t)),this.isNested=!1,t}finish(t,e,i){const s=i?4:0;if(e){const t=e;if(this.prep(this.minalign,8+s),4!=t.length)throw new TypeError("FlatBuffers: file identifier must be length 4");for(let e=3;e>=0;e--)this.writeInt8(t.charCodeAt(e))}this.prep(this.minalign,4+s),this.addOffset(t),s&&this.addInt32(this.bb.capacity()-this.space),this.bb.setPosition(this.space)}finishSizePrefixed(t,e){this.finish(t,e,!0)}requiredField(t,e){const i=this.bb.capacity()-t,s=i-this.bb.readInt32(i);if(!(e<this.bb.readInt16(s)&&0!=this.bb.readInt16(s+e)))throw new TypeError("FlatBuffers: field "+e+" must be set")}startVector(t,e,i){this.notNested(),this.vector_num_elems=e,this.prep(4,t*e),this.prep(i,t*e)}endVector(){return this.writeInt32(this.vector_num_elems),this.offset()}createSharedString(t){if(!t)return 0;if(this.string_maps||(this.string_maps=new Map),this.string_maps.has(t))return this.string_maps.get(t);const e=this.createString(t);return this.string_maps.set(t,e),e}createString(t){if(null==t)return 0;let e;return e=t instanceof Uint8Array?t:this.text_encoder.encode(t),this.addInt8(0),this.startVector(1,e.length,1),this.bb.setPosition(this.space-=e.length),this.bb.bytes().set(e,this.space),this.endVector()}createByteVector(t){return null==t?0:(this.startVector(1,t.length,1),this.bb.setPosition(this.space-=t.length),this.bb.bytes().set(t,this.space),this.endVector())}createObjectOffset(t){return null===t?0:"string"==typeof t?this.createString(t):t.pack(this)}createObjectOffsetList(t){const e=[];for(let i=0;i<t.length;++i){const s=t[i];if(null===s)throw new TypeError("FlatBuffers: Argument for createObjectOffsetList cannot contain null.");e.push(this.createObjectOffset(s))}return e}createStructOffsetList(t,e){return e(this,t.length),this.createObjectOffsetList(t.slice().reverse()),this.endVector()}}!function(t){t[t.UNKNOWN=0]="UNKNOWN",t[t.UNKNOWN1=1]="UNKNOWN1",t[t.WORSE=2]="WORSE",t[t.SAME=3]="SAME",t[t.BETTER=4]="BETTER",t[t.UNKNOWN5=5]="UNKNOWN5"}(o||(o={})),function(t){t[t.APPLE_INTERNAL=0]="APPLE_INTERNAL",t[t.MODELED=1]="MODELED",t[t.STATION=2]="STATION"}(n||(n={}));class C{bb=null;bb_pos=0;__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsMetadata(t,e){return(e||new C).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsMetadata(t,e){return t.setPosition(t.position()+4),(e||new C).__init(t.readInt32(t.position())+t.position(),t)}attributionUrl(t){const e=this.bb.__offset(this.bb_pos,4);return e?this.bb.__string(this.bb_pos+e,t):null}expireTime(){const t=this.bb.__offset(this.bb_pos,6);return t?this.bb.readUint32(this.bb_pos+t):0}language(t){const e=this.bb.__offset(this.bb_pos,8);return e?this.bb.__string(this.bb_pos+e,t):null}latitude(){const t=this.bb.__offset(this.bb_pos,10);return t?this.bb.readFloat32(this.bb_pos+t):0}longitude(){const t=this.bb.__offset(this.bb_pos,12);return t?this.bb.readFloat32(this.bb_pos+t):0}providerLogo(t){const e=this.bb.__offset(this.bb_pos,14);return e?this.bb.__string(this.bb_pos+e,t):null}providerName(t){const e=this.bb.__offset(this.bb_pos,16);return e?this.bb.__string(this.bb_pos+e,t):null}readTime(){const t=this.bb.__offset(this.bb_pos,18);return t?this.bb.readUint32(this.bb_pos+t):0}reportedTime(){const t=this.bb.__offset(this.bb_pos,20);return t?this.bb.readUint32(this.bb_pos+t):0}temporarilyUnavailable(){const t=this.bb.__offset(this.bb_pos,22);return!!t&&!!this.bb.readInt8(this.bb_pos+t)}sourceType(){const t=this.bb.__offset(this.bb_pos,24);return t?this.bb.readInt8(this.bb_pos+t):n.APPLE_INTERNAL}static startMetadata(t){t.startObject(11)}static addAttributionUrl(t,e){t.addFieldOffset(0,e,0)}static addExpireTime(t,e){t.addFieldInt32(1,e,0)}static addLanguage(t,e){t.addFieldOffset(2,e,0)}static addLatitude(t,e){t.addFieldFloat32(3,e,0)}static addLongitude(t,e){t.addFieldFloat32(4,e,0)}static addProviderLogo(t,e){t.addFieldOffset(5,e,0)}static addProviderName(t,e){t.addFieldOffset(6,e,0)}static addReadTime(t,e){t.addFieldInt32(7,e,0)}static addReportedTime(t,e){t.addFieldInt32(8,e,0)}static addTemporarilyUnavailable(t,e){t.addFieldInt8(9,+e,0)}static addSourceType(t,e){t.addFieldInt8(10,e,n.APPLE_INTERNAL)}static endMetadata(t){return t.endObject()}static createMetadata(t,e,i,s,a,o,n,r,d,b,c,h){return C.startMetadata(t),C.addAttributionUrl(t,e),C.addExpireTime(t,i),C.addLanguage(t,s),C.addLatitude(t,a),C.addLongitude(t,o),C.addProviderLogo(t,n),C.addProviderName(t,r),C.addReadTime(t,d),C.addReportedTime(t,b),C.addTemporarilyUnavailable(t,c),C.addSourceType(t,h),C.endMetadata(t)}}!function(t){t[t.NOT_AVAILABLE=0]="NOT_AVAILABLE",t[t.C6H6=1]="C6H6",t[t.NH3=2]="NH3",t[t.NMHC=3]="NMHC",t[t.NO=4]="NO",t[t.NO2=5]="NO2",t[t.NOX=6]="NOX",t[t.OZONE=7]="OZONE",t[t.PM2_5=8]="PM2_5",t[t.SO2=9]="SO2",t[t.PM10=10]="PM10",t[t.CO=11]="CO",t[t.UNKNOWN12=12]="UNKNOWN12",t[t.UNKNOWN13=13]="UNKNOWN13"}(r||(r={})),function(t){t[t.PARTS_PER_BILLION=0]="PARTS_PER_BILLION",t[t.MICROGRAMS_PER_CUBIC_METER=1]="MICROGRAMS_PER_CUBIC_METER"}(d||(d={}));class v{bb=null;bb_pos=0;__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsPollutant(t,e){return(e||new v).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsPollutant(t,e){return t.setPosition(t.position()+4),(e||new v).__init(t.readInt32(t.position())+t.position(),t)}pollutantType(){const t=this.bb.__offset(this.bb_pos,4);return t?this.bb.readInt8(this.bb_pos+t):r.NOT_AVAILABLE}amount(){const t=this.bb.__offset(this.bb_pos,6);return t?this.bb.readFloat32(this.bb_pos+t):0}units(){const t=this.bb.__offset(this.bb_pos,8);return t?this.bb.readInt8(this.bb_pos+t):d.PARTS_PER_BILLION}static startPollutant(t){t.startObject(3)}static addPollutantType(t,e){t.addFieldInt8(0,e,r.NOT_AVAILABLE)}static addAmount(t,e){t.addFieldFloat32(1,e,0)}static addUnits(t,e){t.addFieldInt8(2,e,d.PARTS_PER_BILLION)}static endPollutant(t){return t.endObject()}static createPollutant(t,e,i,s){return v.startPollutant(t),v.addPollutantType(t,e),v.addAmount(t,i),v.addUnits(t,s),v.endPollutant(t)}}class x{bb=null;bb_pos=0;__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsAirQuality(t,e){return(e||new x).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsAirQuality(t,e){return t.setPosition(t.position()+4),(e||new x).__init(t.readInt32(t.position())+t.position(),t)}metadata(t){const e=this.bb.__offset(this.bb_pos,4);return e?(t||new C).__init(this.bb.__indirect(this.bb_pos+e),this.bb):null}categoryIndex(){const t=this.bb.__offset(this.bb_pos,6);return t?this.bb.readInt8(this.bb_pos+t):0}index(){const t=this.bb.__offset(this.bb_pos,8);return t?this.bb.readInt16(this.bb_pos+t):0}isSignificant(){const t=this.bb.__offset(this.bb_pos,10);return!!t&&!!this.bb.readInt8(this.bb_pos+t)}pollutants(t,e){const i=this.bb.__offset(this.bb_pos,12);return i?(e||new v).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+i)+4*t),this.bb):null}pollutantsLength(){const t=this.bb.__offset(this.bb_pos,12);return t?this.bb.__vector_len(this.bb_pos+t):0}previousDayComparison(){const t=this.bb.__offset(this.bb_pos,14);return t?this.bb.readInt8(this.bb_pos+t):o.UNKNOWN}primaryPollutant(){const t=this.bb.__offset(this.bb_pos,16);return t?this.bb.readInt8(this.bb_pos+t):r.NOT_AVAILABLE}scale(t){const e=this.bb.__offset(this.bb_pos,18);return e?this.bb.__string(this.bb_pos+e,t):null}static startAirQuality(t){t.startObject(8)}static addMetadata(t,e){t.addFieldOffset(0,e,0)}static addCategoryIndex(t,e){t.addFieldInt8(1,e,0)}static addIndex(t,e){t.addFieldInt16(2,e,0)}static addIsSignificant(t,e){t.addFieldInt8(3,+e,0)}static addPollutants(t,e){t.addFieldOffset(4,e,0)}static createPollutantsVector(t,e){t.startVector(4,e.length,4);for(let i=e.length-1;i>=0;i--)t.addOffset(e[i]);return t.endVector()}static startPollutantsVector(t,e){t.startVector(4,e,4)}static addPreviousDayComparison(t,e){t.addFieldInt8(5,e,o.UNKNOWN)}static addPrimaryPollutant(t,e){t.addFieldInt8(6,e,r.NOT_AVAILABLE)}static addScale(t,e){t.addFieldOffset(7,e,0)}static endAirQuality(t){return t.endObject()}static createAirQuality(t,e,i,s,a,o,n,r,d){return x.startAirQuality(t),x.addMetadata(t,e),x.addCategoryIndex(t,i),x.addIndex(t,s),x.addIsSignificant(t,a),x.addPollutants(t,o),x.addPreviousDayComparison(t,n),x.addPrimaryPollutant(t,r),x.addScale(t,d),x.endAirQuality(t)}}class U{bb=null;bb_pos=0;__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsArticles(t,e){return(e||new U).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsArticles(t,e){return t.setPosition(t.position()+4),(e||new U).__init(t.readInt32(t.position())+t.position(),t)}id(t){const e=this.bb.__offset(this.bb_pos,4);return e?this.bb.__string(this.bb_pos+e,t):null}supportedStorefronts(t,e){const i=this.bb.__offset(this.bb_pos,6);return i?this.bb.__string(this.bb.__vector(this.bb_pos+i)+4*t,e):null}supportedStorefrontsLength(){const t=this.bb.__offset(this.bb_pos,6);return t?this.bb.__vector_len(this.bb_pos+t):0}alertIds(t,e){const i=this.bb.__offset(this.bb_pos,8);return i?this.bb.__string(this.bb.__vector(this.bb_pos+i)+4*t,e):null}alertIdsLength(){const t=this.bb.__offset(this.bb_pos,8);return t?this.bb.__vector_len(this.bb_pos+t):0}phenomena(t,e){const i=this.bb.__offset(this.bb_pos,10);return i?this.bb.__string(this.bb.__vector(this.bb_pos+i)+4*t,e):null}phenomenaLength(){const t=this.bb.__offset(this.bb_pos,10);return t?this.bb.__vector_len(this.bb_pos+t):0}headlineOverride(t){const e=this.bb.__offset(this.bb_pos,12);return e?this.bb.__string(this.bb_pos+e,t):null}locale(t){const e=this.bb.__offset(this.bb_pos,14);return e?this.bb.__string(this.bb_pos+e,t):null}static startArticles(t){t.startObject(6)}static addId(t,e){t.addFieldOffset(0,e,0)}static addSupportedStorefronts(t,e){t.addFieldOffset(1,e,0)}static createSupportedStorefrontsVector(t,e){t.startVector(4,e.length,4);for(let i=e.length-1;i>=0;i--)t.addOffset(e[i]);return t.endVector()}static startSupportedStorefrontsVector(t,e){t.startVector(4,e,4)}static addAlertIds(t,e){t.addFieldOffset(2,e,0)}static createAlertIdsVector(t,e){t.startVector(4,e.length,4);for(let i=e.length-1;i>=0;i--)t.addOffset(e[i]);return t.endVector()}static startAlertIdsVector(t,e){t.startVector(4,e,4)}static addPhenomena(t,e){t.addFieldOffset(3,e,0)}static createPhenomenaVector(t,e){t.startVector(4,e.length,4);for(let i=e.length-1;i>=0;i--)t.addOffset(e[i]);return t.endVector()}static startPhenomenaVector(t,e){t.startVector(4,e,4)}static addHeadlineOverride(t,e){t.addFieldOffset(4,e,0)}static addLocale(t,e){t.addFieldOffset(5,e,0)}static endArticles(t){return t.endObject()}static createArticles(t,e,i,s,a,o,n){return U.startArticles(t),U.addId(t,e),U.addSupportedStorefronts(t,i),U.addAlertIds(t,s),U.addPhenomena(t,a),U.addHeadlineOverride(t,o),U.addLocale(t,n),U.endArticles(t)}}!function(t){t[t.MEAN=0]="MEAN",t[t.UNKNOWN1=1]="UNKNOWN1",t[t.UNKNOWN2=2]="UNKNOWN2",t[t.UNKNOWN3=3]="UNKNOWN3",t[t.UNKNOWN4=4]="UNKNOWN4",t[t.UNKNOWN5=5]="UNKNOWN5"}(b||(b={})),function(t){t[t.UNKNOWN=0]="UNKNOWN",t[t.OBSERVED=1]="OBSERVED",t[t.LIKELY=2]="LIKELY",t[t.POSSIBLE=3]="POSSIBLE",t[t.UNLIKELY=4]="UNLIKELY",t[t.UNKNOWN5=5]="UNKNOWN5"}(c||(c={})),function(t){t[t.STEADY=0]="STEADY",t[t.INC=1]="INC",t[t.DEC=2]="DEC"}(h||(h={}));class W{bb=null;bb_pos=0;__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsChange(t,e){return(e||new W).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsChange(t,e){return t.setPosition(t.position()+4),(e||new W).__init(t.readInt32(t.position())+t.position(),t)}forecastStart(){const t=this.bb.__offset(this.bb_pos,4);return t?this.bb.readUint32(this.bb_pos+t):0}forecastEnd(){const t=this.bb.__offset(this.bb_pos,6);return t?this.bb.readUint32(this.bb_pos+t):0}maxTemperatureChange(){const t=this.bb.__offset(this.bb_pos,8);return t?this.bb.readInt8(this.bb_pos+t):h.STEADY}minTemperatureChange(){const t=this.bb.__offset(this.bb_pos,10);return t?this.bb.readInt8(this.bb_pos+t):h.STEADY}dayPrecipitationChange(){const t=this.bb.__offset(this.bb_pos,12);return t?this.bb.readInt8(this.bb_pos+t):h.STEADY}nightPrecipitationChange(){const t=this.bb.__offset(this.bb_pos,14);return t?this.bb.readInt8(this.bb_pos+t):h.STEADY}static startChange(t){t.startObject(6)}static addForecastStart(t,e){t.addFieldInt32(0,e,0)}static addForecastEnd(t,e){t.addFieldInt32(1,e,0)}static addMaxTemperatureChange(t,e){t.addFieldInt8(2,e,h.STEADY)}static addMinTemperatureChange(t,e){t.addFieldInt8(3,e,h.STEADY)}static addDayPrecipitationChange(t,e){t.addFieldInt8(4,e,h.STEADY)}static addNightPrecipitationChange(t,e){t.addFieldInt8(5,e,h.STEADY)}static endChange(t){return t.endObject()}static createChange(t,e,i,s,a,o,n){return W.startChange(t),W.addForecastStart(t,e),W.addForecastEnd(t,i),W.addMaxTemperatureChange(t,s),W.addMinTemperatureChange(t,a),W.addDayPrecipitationChange(t,o),W.addNightPrecipitationChange(t,n),W.endChange(t)}}!function(t){t[t.UNKNOWN0=0]="UNKNOWN0",t[t.TEMPERATURE_MAX=1]="TEMPERATURE_MAX",t[t.PRECIPITATION=2]="PRECIPITATION"}(p||(p={})),function(t){t[t.MUCHHIGHER=0]="MUCHHIGHER",t[t.HIGHER=1]="HIGHER",t[t.NORMAL=2]="NORMAL",t[t.LOWER=3]="LOWER",t[t.MUCHLOWER=4]="MUCHLOWER"}(u||(u={}));class E{bb=null;bb_pos=0;__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsComparison(t,e){return(e||new E).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsComparison(t,e){return t.setPosition(t.position()+4),(e||new E).__init(t.readInt32(t.position())+t.position(),t)}condition(){const t=this.bb.__offset(this.bb_pos,4);return t?this.bb.readInt8(this.bb_pos+t):p.UNKNOWN0}currentValue(){const t=this.bb.__offset(this.bb_pos,6);return t?this.bb.readFloat32(this.bb_pos+t):0}baselineValue(){const t=this.bb.__offset(this.bb_pos,8);return t?this.bb.readFloat32(this.bb_pos+t):0}deviation(){const t=this.bb.__offset(this.bb_pos,10);return t?this.bb.readInt8(this.bb_pos+t):u.MUCHHIGHER}baselineType(){const t=this.bb.__offset(this.bb_pos,12);return t?this.bb.readInt32(this.bb_pos+t):0}baselineStartDate(){const t=this.bb.__offset(this.bb_pos,14);return t?this.bb.readInt32(this.bb_pos+t):0}static startComparison(t){t.startObject(6)}static addCondition(t,e){t.addFieldInt8(0,e,p.UNKNOWN0)}static addCurrentValue(t,e){t.addFieldFloat32(1,e,0)}static addBaselineValue(t,e){t.addFieldFloat32(2,e,0)}static addDeviation(t,e){t.addFieldInt8(3,e,u.MUCHHIGHER)}static addBaselineType(t,e){t.addFieldInt32(4,e,0)}static addBaselineStartDate(t,e){t.addFieldInt32(5,e,0)}static endComparison(t){return t.endObject()}static createComparison(t,e,i,s,a,o,n){return E.startComparison(t),E.addCondition(t,e),E.addCurrentValue(t,i),E.addBaselineValue(t,s),E.addDeviation(t,a),E.addBaselineType(t,o),E.addBaselineStartDate(t,n),E.endComparison(t)}}!function(t){t[t.CLEAR=0]="CLEAR",t[t.UNKNOWN1=1]="UNKNOWN1",t[t.UNKNOWN2=2]="UNKNOWN2",t[t.UNKNOWN3=3]="UNKNOWN3",t[t.UNKNOWN4=4]="UNKNOWN4",t[t.HEAVY_RAIN=5]="HEAVY_RAIN",t[t.RAIN=6]="RAIN",t[t.DRIZZLE=7]="DRIZZLE",t[t.POSSIBLE_DRIZZLE=8]="POSSIBLE_DRIZZLE",t[t.UNKNOWN9=9]="UNKNOWN9",t[t.UNKNOWN10=10]="UNKNOWN10",t[t.UNKNOWN11=11]="UNKNOWN11",t[t.UNKNOWN12=12]="UNKNOWN12",t[t.UNKNOWN13=13]="UNKNOWN13",t[t.UNKNOWN14=14]="UNKNOWN14",t[t.SNOW=15]="SNOW",t[t.UNKNOWN16=16]="UNKNOWN16",t[t.UNKNOWN17=17]="UNKNOWN17",t[t.UNKNOWN18=18]="UNKNOWN18"}(_||(_={})),function(t){t[t.CLEAR=0]="CLEAR",t[t.START=1]="START",t[t.STOP=2]="STOP",t[t.START_STOP=3]="START_STOP",t[t.STOP_START=4]="STOP_START",t[t.CONSTANT=5]="CONSTANT"}(l||(l={})),function(t){t[t.FIRST_AT=0]="FIRST_AT",t[t.SECOND_AT=1]="SECOND_AT"}(f||(f={}));class M{bb=null;bb_pos=0;__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsParameter(t,e){return(e||new M).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsParameter(t,e){return t.setPosition(t.position()+4),(e||new M).__init(t.readInt32(t.position())+t.position(),t)}type(){const t=this.bb.__offset(this.bb_pos,4);return t?this.bb.readInt8(this.bb_pos+t):f.FIRST_AT}date(){const t=this.bb.__offset(this.bb_pos,6);return t?this.bb.readUint32(this.bb_pos+t):0}static startParameter(t){t.startObject(2)}static addType(t,e){t.addFieldInt8(0,e,f.FIRST_AT)}static addDate(t,e){t.addFieldInt32(1,e,0)}static endParameter(t){return t.endObject()}static createParameter(t,e,i){return M.startParameter(t),M.addType(t,e),M.addDate(t,i),M.endParameter(t)}}class D{bb=null;bb_pos=0;__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsCondition(t,e){return(e||new D).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsCondition(t,e){return t.setPosition(t.position()+4),(e||new D).__init(t.readInt32(t.position())+t.position(),t)}startTime(){const t=this.bb.__offset(this.bb_pos,4);return t?this.bb.readUint32(this.bb_pos+t):0}endTime(){const t=this.bb.__offset(this.bb_pos,6);return t?this.bb.readUint32(this.bb_pos+t):0}forecastToken(){const t=this.bb.__offset(this.bb_pos,8);return t?this.bb.readInt8(this.bb_pos+t):l.CLEAR}beginCondition(){const t=this.bb.__offset(this.bb_pos,10);return t?this.bb.readInt8(this.bb_pos+t):_.CLEAR}endCondition(){const t=this.bb.__offset(this.bb_pos,12);return t?this.bb.readInt8(this.bb_pos+t):_.CLEAR}parameters(t,e){const i=this.bb.__offset(this.bb_pos,14);return i?(e||new M).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+i)+4*t),this.bb):null}parametersLength(){const t=this.bb.__offset(this.bb_pos,14);return t?this.bb.__vector_len(this.bb_pos+t):0}static startCondition(t){t.startObject(6)}static addStartTime(t,e){t.addFieldInt32(0,e,0)}static addEndTime(t,e){t.addFieldInt32(1,e,0)}static addForecastToken(t,e){t.addFieldInt8(2,e,l.CLEAR)}static addBeginCondition(t,e){t.addFieldInt8(3,e,_.CLEAR)}static addEndCondition(t,e){t.addFieldInt8(4,e,_.CLEAR)}static addParameters(t,e){t.addFieldOffset(5,e,0)}static createParametersVector(t,e){t.startVector(4,e.length,4);for(let i=e.length-1;i>=0;i--)t.addOffset(e[i]);return t.endVector()}static startParametersVector(t,e){t.startVector(4,e,4)}static endCondition(t){return t.endObject()}static createCondition(t,e,i,s,a,o,n){return D.startCondition(t),D.addStartTime(t,e),D.addEndTime(t,i),D.addForecastToken(t,s),D.addBeginCondition(t,a),D.addEndCondition(t,o),D.addParameters(t,n),D.endCondition(t)}}!function(t){t[t.CLEAR=0]="CLEAR",t[t.RAIN=1]="RAIN",t[t.SNOW=2]="SNOW",t[t.SLEET=3]="SLEET",t[t.HAIL=4]="HAIL",t[t.MIXED=5]="MIXED"}(m||(m={}));class R{bb=null;bb_pos=0;__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsPrecipitationAmountByType(t,e){return(e||new R).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsPrecipitationAmountByType(t,e){return t.setPosition(t.position()+4),(e||new R).__init(t.readInt32(t.position())+t.position(),t)}precipitationType(){const t=this.bb.__offset(this.bb_pos,4);return t?this.bb.readInt8(this.bb_pos+t):m.CLEAR}expected(){const t=this.bb.__offset(this.bb_pos,6);return t?this.bb.readFloat32(this.bb_pos+t):0}minimumSnow(){const t=this.bb.__offset(this.bb_pos,8);return t?this.bb.readFloat32(this.bb_pos+t):0}maximumSnow(){const t=this.bb.__offset(this.bb_pos,10);return t?this.bb.readFloat32(this.bb_pos+t):0}expectedSnow(){const t=this.bb.__offset(this.bb_pos,12);return t?this.bb.readFloat32(this.bb_pos+t):0}static startPrecipitationAmountByType(t){t.startObject(5)}static addPrecipitationType(t,e){t.addFieldInt8(0,e,m.CLEAR)}static addExpected(t,e){t.addFieldFloat32(1,e,0)}static addMinimumSnow(t,e){t.addFieldFloat32(2,e,0)}static addMaximumSnow(t,e){t.addFieldFloat32(3,e,0)}static addExpectedSnow(t,e){t.addFieldFloat32(4,e,0)}static endPrecipitationAmountByType(t){return t.endObject()}static createPrecipitationAmountByType(t,e,i,s,a,o){return R.startPrecipitationAmountByType(t),R.addPrecipitationType(t,e),R.addExpected(t,i),R.addMinimumSnow(t,s),R.addMaximumSnow(t,a),R.addExpectedSnow(t,o),R.endPrecipitationAmountByType(t)}}!function(t){t[t.RISING=0]="RISING",t[t.FALLING=1]="FALLING",t[t.STEADY=2]="STEADY"}(y||(y={})),function(t){t[t.CLEAR=0]="CLEAR",t[t.TEMPERATURE_MAX=1]="TEMPERATURE_MAX",t[t.PRECIPITATION=2]="PRECIPITATION",t[t.UNKNOWN3=3]="UNKNOWN3",t[t.UNKNOWN4=4]="UNKNOWN4",t[t.CLOUDY=5]="CLOUDY",t[t.DRIZZLE=6]="DRIZZLE",t[t.FLURRIES=7]="FLURRIES",t[t.FOGGY=8]="FOGGY",t[t.UNKNOWN9=9]="UNKNOWN9",t[t.UNKNOWN10=10]="UNKNOWN10",t[t.UNKNOWN11=11]="UNKNOWN11",t[t.UNKNOWN12=12]="UNKNOWN12",t[t.HAZE=13]="HAZE",t[t.HEAVY_RAIN=14]="HEAVY_RAIN",t[t.HEAVY_SNOW=15]="HEAVY_SNOW",t[t.UNKNOWN16=16]="UNKNOWN16",t[t.UNKNOWN17=17]="UNKNOWN17",t[t.ISOLATED_THUNDERSTORMS=18]="ISOLATED_THUNDERSTORMS",t[t.MOSTLY_CLEAR=19]="MOSTLY_CLEAR",t[t.MOSTLY_CLOUDY=20]="MOSTLY_CLOUDY",t[t.PARTLY_CLOUDY=21]="PARTLY_CLOUDY",t[t.RAIN=22]="RAIN",t[t.UNKNOWN23=23]="UNKNOWN23",t[t.UNKNOWN24=24]="UNKNOWN24",t[t.UNKNOWN25=25]="UNKNOWN25",t[t.SNOW=26]="SNOW",t[t.UNKNOWN27=27]="UNKNOWN27",t[t.UNKNOWN28=28]="UNKNOWN28",t[t.FREEZING_DRIZZLE=29]="FREEZING_DRIZZLE",t[t.THUNDERSTORMS=30]="THUNDERSTORMS",t[t.UNKNOWN31=31]="UNKNOWN31",t[t.WINDY=32]="WINDY",t[t.UNKNOWN33=33]="UNKNOWN33",t[t.UNKNOWN34=34]="UNKNOWN34",t[t.UNKNOWN35=35]="UNKNOWN35",t[t.UNKNOWN36=36]="UNKNOWN36",t[t.UNKNOWN37=37]="UNKNOWN37",t[t.UNKNOWN38=38]="UNKNOWN38",t[t.UNKNOWN39=39]="UNKNOWN39",t[t.UNKNOWN40=40]="UNKNOWN40",t[t.UNKNOWN41=41]="UNKNOWN41",t[t.UNKNOWN42=42]="UNKNOWN42",t[t.UNKNOWN43=43]="UNKNOWN43",t[t.UNKNOWN44=44]="UNKNOWN44"}(N||(N={}));class B{bb=null;bb_pos=0;__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsCurrentWeatherData(t,e){return(e||new B).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsCurrentWeatherData(t,e){return t.setPosition(t.position()+4),(e||new B).__init(t.readInt32(t.position())+t.position(),t)}metadata(t){const e=this.bb.__offset(this.bb_pos,4);return e?(t||new C).__init(this.bb.__indirect(this.bb_pos+e),this.bb):null}asOf(){const t=this.bb.__offset(this.bb_pos,6);return t?this.bb.readInt32(this.bb_pos+t):0}cloudCover(){const t=this.bb.__offset(this.bb_pos,8);return t?this.bb.readInt8(this.bb_pos+t):0}cloudCoverLowAltPct(){const t=this.bb.__offset(this.bb_pos,10);return t?this.bb.readInt8(this.bb_pos+t):0}cloudCoverMidAltPct(){const t=this.bb.__offset(this.bb_pos,12);return t?this.bb.readInt8(this.bb_pos+t):0}cloudCoverHighAltPct(){const t=this.bb.__offset(this.bb_pos,14);return t?this.bb.readInt8(this.bb_pos+t):0}conditionCode(){const t=this.bb.__offset(this.bb_pos,16);return t?this.bb.readInt8(this.bb_pos+t):N.CLEAR}daylight(){const t=this.bb.__offset(this.bb_pos,18);return!!t&&!!this.bb.readInt8(this.bb_pos+t)}humidity(){const t=this.bb.__offset(this.bb_pos,20);return t?this.bb.readInt8(this.bb_pos+t):0}perceivedPrecipitationIntensity(){const t=this.bb.__offset(this.bb_pos,22);return t?this.bb.readFloat32(this.bb_pos+t):0}precipitationAmount1h(){const t=this.bb.__offset(this.bb_pos,24);return t?this.bb.readFloat32(this.bb_pos+t):0}precipitationAmount6h(){const t=this.bb.__offset(this.bb_pos,26);return t?this.bb.readFloat32(this.bb_pos+t):0}precipitationAmount24h(){const t=this.bb.__offset(this.bb_pos,28);return t?this.bb.readFloat32(this.bb_pos+t):0}precipitationAmountNext1h(){const t=this.bb.__offset(this.bb_pos,30);return t?this.bb.readFloat32(this.bb_pos+t):0}precipitationAmountNext6h(){const t=this.bb.__offset(this.bb_pos,32);return t?this.bb.readFloat32(this.bb_pos+t):0}precipitationAmountNext24h(){const t=this.bb.__offset(this.bb_pos,34);return t?this.bb.readFloat32(this.bb_pos+t):0}precipitationAmountNext1hByType(t,e){const i=this.bb.__offset(this.bb_pos,36);return i?(e||new R).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+i)+4*t),this.bb):null}precipitationAmountNext1hByTypeLength(){const t=this.bb.__offset(this.bb_pos,36);return t?this.bb.__vector_len(this.bb_pos+t):0}precipitationAmountNext6hByType(t,e){const i=this.bb.__offset(this.bb_pos,38);return i?(e||new R).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+i)+4*t),this.bb):null}precipitationAmountNext6hByTypeLength(){const t=this.bb.__offset(this.bb_pos,38);return t?this.bb.__vector_len(this.bb_pos+t):0}precipitationAmountNext24hByType(t,e){const i=this.bb.__offset(this.bb_pos,40);return i?(e||new R).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+i)+4*t),this.bb):null}precipitationAmountNext24hByTypeLength(){const t=this.bb.__offset(this.bb_pos,40);return t?this.bb.__vector_len(this.bb_pos+t):0}precipitationAmountPrevious1hByType(t,e){const i=this.bb.__offset(this.bb_pos,42);return i?(e||new R).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+i)+4*t),this.bb):null}precipitationAmountPrevious1hByTypeLength(){const t=this.bb.__offset(this.bb_pos,42);return t?this.bb.__vector_len(this.bb_pos+t):0}precipitationAmountPrevious6hByType(t,e){const i=this.bb.__offset(this.bb_pos,44);return i?(e||new R).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+i)+4*t),this.bb):null}precipitationAmountPrevious6hByTypeLength(){const t=this.bb.__offset(this.bb_pos,44);return t?this.bb.__vector_len(this.bb_pos+t):0}precipitationAmountPrevious24hByType(t,e){const i=this.bb.__offset(this.bb_pos,46);return i?(e||new R).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+i)+4*t),this.bb):null}precipitationAmountPrevious24hByTypeLength(){const t=this.bb.__offset(this.bb_pos,46);return t?this.bb.__vector_len(this.bb_pos+t):0}precipitationIntensity(){const t=this.bb.__offset(this.bb_pos,48);return t?this.bb.readFloat32(this.bb_pos+t):0}pressure(){const t=this.bb.__offset(this.bb_pos,50);return t?this.bb.readFloat32(this.bb_pos+t):0}pressureTrend(){const t=this.bb.__offset(this.bb_pos,52);return t?this.bb.readInt8(this.bb_pos+t):y.RISING}snowfallAmount1h(){const t=this.bb.__offset(this.bb_pos,54);return t?this.bb.readFloat32(this.bb_pos+t):0}snowfallAmount6h(){const t=this.bb.__offset(this.bb_pos,56);return t?this.bb.readFloat32(this.bb_pos+t):0}snowfallAmount24h(){const t=this.bb.__offset(this.bb_pos,58);return t?this.bb.readFloat32(this.bb_pos+t):0}snowfallAmountNext1h(){const t=this.bb.__offset(this.bb_pos,60);return t?this.bb.readFloat32(this.bb_pos+t):0}snowfallAmountNext6h(){const t=this.bb.__offset(this.bb_pos,62);return t?this.bb.readFloat32(this.bb_pos+t):0}snowfallAmountNext24h(){const t=this.bb.__offset(this.bb_pos,64);return t?this.bb.readFloat32(this.bb_pos+t):0}temperature(){const t=this.bb.__offset(this.bb_pos,66);return t?this.bb.readFloat32(this.bb_pos+t):0}temperatureApparent(){const t=this.bb.__offset(this.bb_pos,68);return t?this.bb.readFloat32(this.bb_pos+t):0}unknown34(){const t=this.bb.__offset(this.bb_pos,70);return t?this.bb.readFloat32(this.bb_pos+t):0}temperatureDewPoint(){const t=this.bb.__offset(this.bb_pos,72);return t?this.bb.readFloat32(this.bb_pos+t):0}uvIndex(){const t=this.bb.__offset(this.bb_pos,74);return t?this.bb.readInt8(this.bb_pos+t):0}visibility(){const t=this.bb.__offset(this.bb_pos,76);return t?this.bb.readFloat32(this.bb_pos+t):0}windDirection(){const t=this.bb.__offset(this.bb_pos,78);return t?this.bb.readInt16(this.bb_pos+t):0}windGust(){const t=this.bb.__offset(this.bb_pos,80);return t?this.bb.readFloat32(this.bb_pos+t):0}windSpeed(){const t=this.bb.__offset(this.bb_pos,82);return t?this.bb.readFloat32(this.bb_pos+t):0}static startCurrentWeatherData(t){t.startObject(40)}static addMetadata(t,e){t.addFieldOffset(0,e,0)}static addAsOf(t,e){t.addFieldInt32(1,e,0)}static addCloudCover(t,e){t.addFieldInt8(2,e,0)}static addCloudCoverLowAltPct(t,e){t.addFieldInt8(3,e,0)}static addCloudCoverMidAltPct(t,e){t.addFieldInt8(4,e,0)}static addCloudCoverHighAltPct(t,e){t.addFieldInt8(5,e,0)}static addConditionCode(t,e){t.addFieldInt8(6,e,N.CLEAR)}static addDaylight(t,e){t.addFieldInt8(7,+e,0)}static addHumidity(t,e){t.addFieldInt8(8,e,0)}static addPerceivedPrecipitationIntensity(t,e){t.addFieldFloat32(9,e,0)}static addPrecipitationAmount1h(t,e){t.addFieldFloat32(10,e,0)}static addPrecipitationAmount6h(t,e){t.addFieldFloat32(11,e,0)}static addPrecipitationAmount24h(t,e){t.addFieldFloat32(12,e,0)}static addPrecipitationAmountNext1h(t,e){t.addFieldFloat32(13,e,0)}static addPrecipitationAmountNext6h(t,e){t.addFieldFloat32(14,e,0)}static addPrecipitationAmountNext24h(t,e){t.addFieldFloat32(15,e,0)}static addPrecipitationAmountNext1hByType(t,e){t.addFieldOffset(16,e,0)}static createPrecipitationAmountNext1hByTypeVector(t,e){t.startVector(4,e.length,4);for(let i=e.length-1;i>=0;i--)t.addOffset(e[i]);return t.endVector()}static startPrecipitationAmountNext1hByTypeVector(t,e){t.startVector(4,e,4)}static addPrecipitationAmountNext6hByType(t,e){t.addFieldOffset(17,e,0)}static createPrecipitationAmountNext6hByTypeVector(t,e){t.startVector(4,e.length,4);for(let i=e.length-1;i>=0;i--)t.addOffset(e[i]);return t.endVector()}static startPrecipitationAmountNext6hByTypeVector(t,e){t.startVector(4,e,4)}static addPrecipitationAmountNext24hByType(t,e){t.addFieldOffset(18,e,0)}static createPrecipitationAmountNext24hByTypeVector(t,e){t.startVector(4,e.length,4);for(let i=e.length-1;i>=0;i--)t.addOffset(e[i]);return t.endVector()}static startPrecipitationAmountNext24hByTypeVector(t,e){t.startVector(4,e,4)}static addPrecipitationAmountPrevious1hByType(t,e){t.addFieldOffset(19,e,0)}static createPrecipitationAmountPrevious1hByTypeVector(t,e){t.startVector(4,e.length,4);for(let i=e.length-1;i>=0;i--)t.addOffset(e[i]);return t.endVector()}static startPrecipitationAmountPrevious1hByTypeVector(t,e){t.startVector(4,e,4)}static addPrecipitationAmountPrevious6hByType(t,e){t.addFieldOffset(20,e,0)}static createPrecipitationAmountPrevious6hByTypeVector(t,e){t.startVector(4,e.length,4);for(let i=e.length-1;i>=0;i--)t.addOffset(e[i]);return t.endVector()}static startPrecipitationAmountPrevious6hByTypeVector(t,e){t.startVector(4,e,4)}static addPrecipitationAmountPrevious24hByType(t,e){t.addFieldOffset(21,e,0)}static createPrecipitationAmountPrevious24hByTypeVector(t,e){t.startVector(4,e.length,4);for(let i=e.length-1;i>=0;i--)t.addOffset(e[i]);return t.endVector()}static startPrecipitationAmountPrevious24hByTypeVector(t,e){t.startVector(4,e,4)}static addPrecipitationIntensity(t,e){t.addFieldFloat32(22,e,0)}static addPressure(t,e){t.addFieldFloat32(23,e,0)}static addPressureTrend(t,e){t.addFieldInt8(24,e,y.RISING)}static addSnowfallAmount1h(t,e){t.addFieldFloat32(25,e,0)}static addSnowfallAmount6h(t,e){t.addFieldFloat32(26,e,0)}static addSnowfallAmount24h(t,e){t.addFieldFloat32(27,e,0)}static addSnowfallAmountNext1h(t,e){t.addFieldFloat32(28,e,0)}static addSnowfallAmountNext6h(t,e){t.addFieldFloat32(29,e,0)}static addSnowfallAmountNext24h(t,e){t.addFieldFloat32(30,e,0)}static addTemperature(t,e){t.addFieldFloat32(31,e,0)}static addTemperatureApparent(t,e){t.addFieldFloat32(32,e,0)}static addUnknown34(t,e){t.addFieldFloat32(33,e,0)}static addTemperatureDewPoint(t,e){t.addFieldFloat32(34,e,0)}static addUvIndex(t,e){t.addFieldInt8(35,e,0)}static addVisibility(t,e){t.addFieldFloat32(36,e,0)}static addWindDirection(t,e){t.addFieldInt16(37,e,0)}static addWindGust(t,e){t.addFieldFloat32(38,e,0)}static addWindSpeed(t,e){t.addFieldFloat32(39,e,0)}static endCurrentWeatherData(t){return t.endObject()}static createCurrentWeatherData(t,e,i,s,a,o,n,r,d,b,c,h,p,u,_,l,f,m,y,N,A,F,I,O,T,w,g,S,P,C,v,x,U,W,E,M,D,R,L,V,K){return B.startCurrentWeatherData(t),B.addMetadata(t,e),B.addAsOf(t,i),B.addCloudCover(t,s),B.addCloudCoverLowAltPct(t,a),B.addCloudCoverMidAltPct(t,o),B.addCloudCoverHighAltPct(t,n),B.addConditionCode(t,r),B.addDaylight(t,d),B.addHumidity(t,b),B.addPerceivedPrecipitationIntensity(t,c),B.addPrecipitationAmount1h(t,h),B.addPrecipitationAmount6h(t,p),B.addPrecipitationAmount24h(t,u),B.addPrecipitationAmountNext1h(t,_),B.addPrecipitationAmountNext6h(t,l),B.addPrecipitationAmountNext24h(t,f),B.addPrecipitationAmountNext1hByType(t,m),B.addPrecipitationAmountNext6hByType(t,y),B.addPrecipitationAmountNext24hByType(t,N),B.addPrecipitationAmountPrevious1hByType(t,A),B.addPrecipitationAmountPrevious6hByType(t,F),B.addPrecipitationAmountPrevious24hByType(t,I),B.addPrecipitationIntensity(t,O),B.addPressure(t,T),B.addPressureTrend(t,w),B.addSnowfallAmount1h(t,g),B.addSnowfallAmount6h(t,S),B.addSnowfallAmount24h(t,P),B.addSnowfallAmountNext1h(t,C),B.addSnowfallAmountNext6h(t,v),B.addSnowfallAmountNext24h(t,x),B.addTemperature(t,U),B.addTemperatureApparent(t,W),B.addUnknown34(t,E),B.addTemperatureDewPoint(t,M),B.addUvIndex(t,D),B.addVisibility(t,R),B.addWindDirection(t,L),B.addWindGust(t,V),B.addWindSpeed(t,K),B.endCurrentWeatherData(t)}}class L{bb=null;bb_pos=0;__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsDayPartForecast(t,e){return(e||new L).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsDayPartForecast(t,e){return t.setPosition(t.position()+4),(e||new L).__init(t.readInt32(t.position())+t.position(),t)}forecastStart(){const t=this.bb.__offset(this.bb_pos,4);return t?this.bb.readUint32(this.bb_pos+t):0}forecastEnd(){const t=this.bb.__offset(this.bb_pos,6);return t?this.bb.readUint32(this.bb_pos+t):0}cloudCover(){const t=this.bb.__offset(this.bb_pos,8);return t?this.bb.readInt8(this.bb_pos+t):0}cloudCoverLowAltPct(){const t=this.bb.__offset(this.bb_pos,10);return t?this.bb.readInt8(this.bb_pos+t):0}cloudCoverMidAltPct(){const t=this.bb.__offset(this.bb_pos,12);return t?this.bb.readInt8(this.bb_pos+t):0}cloudCoverHighAltPct(){const t=this.bb.__offset(this.bb_pos,14);return t?this.bb.readInt8(this.bb_pos+t):0}conditionCode(){const t=this.bb.__offset(this.bb_pos,16);return t?this.bb.readInt8(this.bb_pos+t):N.CLEAR}humidity(){const t=this.bb.__offset(this.bb_pos,18);return t?this.bb.readInt8(this.bb_pos+t):0}humidityMax(){const t=this.bb.__offset(this.bb_pos,20);return t?this.bb.readInt8(this.bb_pos+t):0}humidityMin(){const t=this.bb.__offset(this.bb_pos,22);return t?this.bb.readInt8(this.bb_pos+t):0}precipitationAmount(){const t=this.bb.__offset(this.bb_pos,24);return t?this.bb.readFloat32(this.bb_pos+t):0}precipitationAmountByType(t,e){const i=this.bb.__offset(this.bb_pos,26);return i?(e||new R).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+i)+4*t),this.bb):null}precipitationAmountByTypeLength(){const t=this.bb.__offset(this.bb_pos,26);return t?this.bb.__vector_len(this.bb_pos+t):0}precipitationChance(){const t=this.bb.__offset(this.bb_pos,28);return t?this.bb.readInt8(this.bb_pos+t):0}precipitationType(){const t=this.bb.__offset(this.bb_pos,30);return t?this.bb.readInt8(this.bb_pos+t):m.CLEAR}snowfallAmount(){const t=this.bb.__offset(this.bb_pos,32);return t?this.bb.readFloat32(this.bb_pos+t):0}temperatureMax(){const t=this.bb.__offset(this.bb_pos,34);return t?this.bb.readFloat32(this.bb_pos+t):0}temperatureMin(){const t=this.bb.__offset(this.bb_pos,36);return t?this.bb.readFloat32(this.bb_pos+t):0}visibilityMax(){const t=this.bb.__offset(this.bb_pos,38);return t?this.bb.readFloat32(this.bb_pos+t):0}visibilityMin(){const t=this.bb.__offset(this.bb_pos,40);return t?this.bb.readFloat32(this.bb_pos+t):0}windDirection(){const t=this.bb.__offset(this.bb_pos,42);return t?this.bb.readInt16(this.bb_pos+t):0}windGustSpeedMax(){const t=this.bb.__offset(this.bb_pos,44);return t?this.bb.readFloat32(this.bb_pos+t):0}windSpeed(){const t=this.bb.__offset(this.bb_pos,46);return t?this.bb.readFloat32(this.bb_pos+t):0}windSpeedMax(){const t=this.bb.__offset(this.bb_pos,48);return t?this.bb.readFloat32(this.bb_pos+t):0}static startDayPartForecast(t){t.startObject(23)}static addForecastStart(t,e){t.addFieldInt32(0,e,0)}static addForecastEnd(t,e){t.addFieldInt32(1,e,0)}static addCloudCover(t,e){t.addFieldInt8(2,e,0)}static addCloudCoverLowAltPct(t,e){t.addFieldInt8(3,e,0)}static addCloudCoverMidAltPct(t,e){t.addFieldInt8(4,e,0)}static addCloudCoverHighAltPct(t,e){t.addFieldInt8(5,e,0)}static addConditionCode(t,e){t.addFieldInt8(6,e,N.CLEAR)}static addHumidity(t,e){t.addFieldInt8(7,e,0)}static addHumidityMax(t,e){t.addFieldInt8(8,e,0)}static addHumidityMin(t,e){t.addFieldInt8(9,e,0)}static addPrecipitationAmount(t,e){t.addFieldFloat32(10,e,0)}static addPrecipitationAmountByType(t,e){t.addFieldOffset(11,e,0)}static createPrecipitationAmountByTypeVector(t,e){t.startVector(4,e.length,4);for(let i=e.length-1;i>=0;i--)t.addOffset(e[i]);return t.endVector()}static startPrecipitationAmountByTypeVector(t,e){t.startVector(4,e,4)}static addPrecipitationChance(t,e){t.addFieldInt8(12,e,0)}static addPrecipitationType(t,e){t.addFieldInt8(13,e,m.CLEAR)}static addSnowfallAmount(t,e){t.addFieldFloat32(14,e,0)}static addTemperatureMax(t,e){t.addFieldFloat32(15,e,0)}static addTemperatureMin(t,e){t.addFieldFloat32(16,e,0)}static addVisibilityMax(t,e){t.addFieldFloat32(17,e,0)}static addVisibilityMin(t,e){t.addFieldFloat32(18,e,0)}static addWindDirection(t,e){t.addFieldInt16(19,e,0)}static addWindGustSpeedMax(t,e){t.addFieldFloat32(20,e,0)}static addWindSpeed(t,e){t.addFieldFloat32(21,e,0)}static addWindSpeedMax(t,e){t.addFieldFloat32(22,e,0)}static endDayPartForecast(t){return t.endObject()}static createDayPartForecast(t,e,i,s,a,o,n,r,d,b,c,h,p,u,_,l,f,m,y,N,A,F,I,O){return L.startDayPartForecast(t),L.addForecastStart(t,e),L.addForecastEnd(t,i),L.addCloudCover(t,s),L.addCloudCoverLowAltPct(t,a),L.addCloudCoverMidAltPct(t,o),L.addCloudCoverHighAltPct(t,n),L.addConditionCode(t,r),L.addHumidity(t,d),L.addHumidityMax(t,b),L.addHumidityMin(t,c),L.addPrecipitationAmount(t,h),L.addPrecipitationAmountByType(t,p),L.addPrecipitationChance(t,u),L.addPrecipitationType(t,_),L.addSnowfallAmount(t,l),L.addTemperatureMax(t,f),L.addTemperatureMin(t,m),L.addVisibilityMax(t,y),L.addVisibilityMin(t,N),L.addWindDirection(t,A),L.addWindGustSpeedMax(t,F),L.addWindSpeed(t,I),L.addWindSpeedMax(t,O),L.endDayPartForecast(t)}}!function(t){t[t.NEW=0]="NEW",t[t.WAXING_CRESCENT=1]="WAXING_CRESCENT",t[t.FIRST_QUARTER=2]="FIRST_QUARTER",t[t.WAXING_GIBBOUS=3]="WAXING_GIBBOUS",t[t.FULL=4]="FULL",t[t.WANING_GIBBOUS=5]="WANING_GIBBOUS",t[t.THIRD_QUARTER=6]="THIRD_QUARTER",t[t.WANING_CRESCENT=7]="WANING_CRESCENT"}(A||(A={}));class V{bb=null;bb_pos=0;__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsDayWeatherConditions(t,e){return(e||new V).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsDayWeatherConditions(t,e){return t.setPosition(t.position()+4),(e||new V).__init(t.readInt32(t.position())+t.position(),t)}forecastStart(){const t=this.bb.__offset(this.bb_pos,4);return t?this.bb.readUint32(this.bb_pos+t):0}forecastEnd(){const t=this.bb.__offset(this.bb_pos,6);return t?this.bb.readUint32(this.bb_pos+t):0}conditionCode(){const t=this.bb.__offset(this.bb_pos,8);return t?this.bb.readInt8(this.bb_pos+t):N.CLEAR}humidityMax(){const t=this.bb.__offset(this.bb_pos,10);return t?this.bb.readInt8(this.bb_pos+t):0}humidityMin(){const t=this.bb.__offset(this.bb_pos,12);return t?this.bb.readInt8(this.bb_pos+t):0}maxUvIndex(){const t=this.bb.__offset(this.bb_pos,14);return t?this.bb.readInt8(this.bb_pos+t):0}moonPhase(){const t=this.bb.__offset(this.bb_pos,16);return t?this.bb.readInt8(this.bb_pos+t):A.NEW}moonrise(){const t=this.bb.__offset(this.bb_pos,18);return t?this.bb.readUint32(this.bb_pos+t):0}moonset(){const t=this.bb.__offset(this.bb_pos,20);return t?this.bb.readUint32(this.bb_pos+t):0}precipitationAmount(){const t=this.bb.__offset(this.bb_pos,22);return t?this.bb.readFloat32(this.bb_pos+t):0}precipitationAmountByType(t,e){const i=this.bb.__offset(this.bb_pos,24);return i?(e||new R).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+i)+4*t),this.bb):null}precipitationAmountByTypeLength(){const t=this.bb.__offset(this.bb_pos,24);return t?this.bb.__vector_len(this.bb_pos+t):0}precipitationChance(){const t=this.bb.__offset(this.bb_pos,26);return t?this.bb.readInt8(this.bb_pos+t):0}precipitationType(){const t=this.bb.__offset(this.bb_pos,28);return t?this.bb.readInt8(this.bb_pos+t):m.CLEAR}snowfallAmount(){const t=this.bb.__offset(this.bb_pos,30);return t?this.bb.readFloat32(this.bb_pos+t):0}solarMidnight(){const t=this.bb.__offset(this.bb_pos,32);return t?this.bb.readInt32(this.bb_pos+t):0}solarNoon(){const t=this.bb.__offset(this.bb_pos,34);return t?this.bb.readInt32(this.bb_pos+t):0}sunrise(){const t=this.bb.__offset(this.bb_pos,36);return t?this.bb.readInt32(this.bb_pos+t):0}sunriseCivil(){const t=this.bb.__offset(this.bb_pos,38);return t?this.bb.readInt32(this.bb_pos+t):0}sunriseNautical(){const t=this.bb.__offset(this.bb_pos,40);return t?this.bb.readInt32(this.bb_pos+t):0}sunriseAstronomical(){const t=this.bb.__offset(this.bb_pos,42);return t?this.bb.readInt32(this.bb_pos+t):0}sunset(){const t=this.bb.__offset(this.bb_pos,44);return t?this.bb.readInt32(this.bb_pos+t):0}sunsetCivil(){const t=this.bb.__offset(this.bb_pos,46);return t?this.bb.readInt32(this.bb_pos+t):0}sunsetNautical(){const t=this.bb.__offset(this.bb_pos,48);return t?this.bb.readInt32(this.bb_pos+t):0}sunsetAstronomical(){const t=this.bb.__offset(this.bb_pos,50);return t?this.bb.readInt32(this.bb_pos+t):0}temperatureMax(){const t=this.bb.__offset(this.bb_pos,52);return t?this.bb.readFloat32(this.bb_pos+t):0}temperatureMaxTime(){const t=this.bb.__offset(this.bb_pos,54);return t?this.bb.readUint32(this.bb_pos+t):0}temperatureMin(){const t=this.bb.__offset(this.bb_pos,56);return t?this.bb.readFloat32(this.bb_pos+t):0}temperatureMinTime(){const t=this.bb.__offset(this.bb_pos,58);return t?this.bb.readUint32(this.bb_pos+t):0}windGustSpeedMax(){const t=this.bb.__offset(this.bb_pos,60);return t?this.bb.readFloat32(this.bb_pos+t):0}windSpeedAvg(){const t=this.bb.__offset(this.bb_pos,62);return t?this.bb.readFloat32(this.bb_pos+t):0}windSpeedMax(){const t=this.bb.__offset(this.bb_pos,64);return t?this.bb.readFloat32(this.bb_pos+t):0}visibilityMax(){const t=this.bb.__offset(this.bb_pos,66);return t?this.bb.readFloat32(this.bb_pos+t):0}visibilityMin(){const t=this.bb.__offset(this.bb_pos,68);return t?this.bb.readFloat32(this.bb_pos+t):0}daytimeForecast(t){const e=this.bb.__offset(this.bb_pos,70);return e?(t||new L).__init(this.bb.__indirect(this.bb_pos+e),this.bb):null}overnightForecast(t){const e=this.bb.__offset(this.bb_pos,72);return e?(t||new L).__init(this.bb.__indirect(this.bb_pos+e),this.bb):null}restOfDayForecast(t){const e=this.bb.__offset(this.bb_pos,74);return e?(t||new L).__init(this.bb.__indirect(this.bb_pos+e),this.bb):null}static startDayWeatherConditions(t){t.startObject(36)}static addForecastStart(t,e){t.addFieldInt32(0,e,0)}static addForecastEnd(t,e){t.addFieldInt32(1,e,0)}static addConditionCode(t,e){t.addFieldInt8(2,e,N.CLEAR)}static addHumidityMax(t,e){t.addFieldInt8(3,e,0)}static addHumidityMin(t,e){t.addFieldInt8(4,e,0)}static addMaxUvIndex(t,e){t.addFieldInt8(5,e,0)}static addMoonPhase(t,e){t.addFieldInt8(6,e,A.NEW)}static addMoonrise(t,e){t.addFieldInt32(7,e,0)}static addMoonset(t,e){t.addFieldInt32(8,e,0)}static addPrecipitationAmount(t,e){t.addFieldFloat32(9,e,0)}static addPrecipitationAmountByType(t,e){t.addFieldOffset(10,e,0)}static createPrecipitationAmountByTypeVector(t,e){t.startVector(4,e.length,4);for(let i=e.length-1;i>=0;i--)t.addOffset(e[i]);return t.endVector()}static startPrecipitationAmountByTypeVector(t,e){t.startVector(4,e,4)}static addPrecipitationChance(t,e){t.addFieldInt8(11,e,0)}static addPrecipitationType(t,e){t.addFieldInt8(12,e,m.CLEAR)}static addSnowfallAmount(t,e){t.addFieldFloat32(13,e,0)}static addSolarMidnight(t,e){t.addFieldInt32(14,e,0)}static addSolarNoon(t,e){t.addFieldInt32(15,e,0)}static addSunrise(t,e){t.addFieldInt32(16,e,0)}static addSunriseCivil(t,e){t.addFieldInt32(17,e,0)}static addSunriseNautical(t,e){t.addFieldInt32(18,e,0)}static addSunriseAstronomical(t,e){t.addFieldInt32(19,e,0)}static addSunset(t,e){t.addFieldInt32(20,e,0)}static addSunsetCivil(t,e){t.addFieldInt32(21,e,0)}static addSunsetNautical(t,e){t.addFieldInt32(22,e,0)}static addSunsetAstronomical(t,e){t.addFieldInt32(23,e,0)}static addTemperatureMax(t,e){t.addFieldFloat32(24,e,0)}static addTemperatureMaxTime(t,e){t.addFieldInt32(25,e,0)}static addTemperatureMin(t,e){t.addFieldFloat32(26,e,0)}static addTemperatureMinTime(t,e){t.addFieldInt32(27,e,0)}static addWindGustSpeedMax(t,e){t.addFieldFloat32(28,e,0)}static addWindSpeedAvg(t,e){t.addFieldFloat32(29,e,0)}static addWindSpeedMax(t,e){t.addFieldFloat32(30,e,0)}static addVisibilityMax(t,e){t.addFieldFloat32(31,e,0)}static addVisibilityMin(t,e){t.addFieldFloat32(32,e,0)}static addDaytimeForecast(t,e){t.addFieldOffset(33,e,0)}static addOvernightForecast(t,e){t.addFieldOffset(34,e,0)}static addRestOfDayForecast(t,e){t.addFieldOffset(35,e,0)}static endDayWeatherConditions(t){return t.endObject()}}class K{bb=null;bb_pos=0;__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsDailyForecastData(t,e){return(e||new K).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsDailyForecastData(t,e){return t.setPosition(t.position()+4),(e||new K).__init(t.readInt32(t.position())+t.position(),t)}metadata(t){const e=this.bb.__offset(this.bb_pos,4);return e?(t||new C).__init(this.bb.__indirect(this.bb_pos+e),this.bb):null}days(t,e){const i=this.bb.__offset(this.bb_pos,6);return i?(e||new V).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+i)+4*t),this.bb):null}daysLength(){const t=this.bb.__offset(this.bb_pos,6);return t?this.bb.__vector_len(this.bb_pos+t):0}static startDailyForecastData(t){t.startObject(2)}static addMetadata(t,e){t.addFieldOffset(0,e,0)}static addDays(t,e){t.addFieldOffset(1,e,0)}static createDaysVector(t,e){t.startVector(4,e.length,4);for(let i=e.length-1;i>=0;i--)t.addOffset(e[i]);return t.endVector()}static startDaysVector(t,e){t.startVector(4,e,4)}static endDailyForecastData(t){return t.endObject()}static createDailyForecastData(t,e,i){return K.startDailyForecastData(t),K.addMetadata(t,e),K.addDays(t,i),K.endDailyForecastData(t)}}class H{bb=null;bb_pos=0;__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsForecastMinute(t,e){return(e||new H).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsForecastMinute(t,e){return t.setPosition(t.position()+4),(e||new H).__init(t.readInt32(t.position())+t.position(),t)}startTime(){const t=this.bb.__offset(this.bb_pos,4);return t?this.bb.readUint32(this.bb_pos+t):0}precipitationChance(){const t=this.bb.__offset(this.bb_pos,6);return t?this.bb.readInt8(this.bb_pos+t):0}precipitationIntensity(){const t=this.bb.__offset(this.bb_pos,8);return t?this.bb.readFloat32(this.bb_pos+t):0}perceivedPrecipitationIntensity(){const t=this.bb.__offset(this.bb_pos,10);return t?this.bb.readFloat32(this.bb_pos+t):0}static startForecastMinute(t){t.startObject(4)}static addStartTime(t,e){t.addFieldInt32(0,e,0)}static addPrecipitationChance(t,e){t.addFieldInt8(1,e,0)}static addPrecipitationIntensity(t,e){t.addFieldFloat32(2,e,0)}static addPerceivedPrecipitationIntensity(t,e){t.addFieldFloat32(3,e,0)}static endForecastMinute(t){return t.endObject()}static createForecastMinute(t,e,i,s,a){return H.startForecastMinute(t),H.addStartTime(t,e),H.addPrecipitationChance(t,i),H.addPrecipitationIntensity(t,s),H.addPerceivedPrecipitationIntensity(t,a),H.endForecastMinute(t)}}class j{bb=null;bb_pos=0;__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsForecastPeriodSummary(t,e){return(e||new j).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsForecastPeriodSummary(t,e){return t.setPosition(t.position()+4),(e||new j).__init(t.readInt32(t.position())+t.position(),t)}startTime(){const t=this.bb.__offset(this.bb_pos,4);return t?this.bb.readUint32(this.bb_pos+t):0}endTime(){const t=this.bb.__offset(this.bb_pos,6);return t?this.bb.readUint32(this.bb_pos+t):0}condition(){const t=this.bb.__offset(this.bb_pos,8);return t?this.bb.readInt8(this.bb_pos+t):m.CLEAR}precipitationChance(){const t=this.bb.__offset(this.bb_pos,10);return t?this.bb.readInt8(this.bb_pos+t):0}precipitationIntensity(){const t=this.bb.__offset(this.bb_pos,12);return t?this.bb.readFloat32(this.bb_pos+t):0}static startForecastPeriodSummary(t){t.startObject(5)}static addStartTime(t,e){t.addFieldInt32(0,e,0)}static addEndTime(t,e){t.addFieldInt32(1,e,0)}static addCondition(t,e){t.addFieldInt8(2,e,m.CLEAR)}static addPrecipitationChance(t,e){t.addFieldInt8(3,e,0)}static addPrecipitationIntensity(t,e){t.addFieldFloat32(4,e,0)}static endForecastPeriodSummary(t){return t.endObject()}static createForecastPeriodSummary(t,e,i,s,a,o){return j.startForecastPeriodSummary(t),j.addStartTime(t,e),j.addEndTime(t,i),j.addCondition(t,s),j.addPrecipitationChance(t,a),j.addPrecipitationIntensity(t,o),j.endForecastPeriodSummary(t)}}class G{bb=null;bb_pos=0;__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsHistoricalComparison(t,e){return(e||new G).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsHistoricalComparison(t,e){return t.setPosition(t.position()+4),(e||new G).__init(t.readInt32(t.position())+t.position(),t)}metadata(t){const e=this.bb.__offset(this.bb_pos,4);return e?(t||new C).__init(this.bb.__indirect(this.bb_pos+e),this.bb):null}comparisons(t,e){const i=this.bb.__offset(this.bb_pos,6);return i?(e||new E).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+i)+4*t),this.bb):null}comparisonsLength(){const t=this.bb.__offset(this.bb_pos,6);return t?this.bb.__vector_len(this.bb_pos+t):0}static startHistoricalComparison(t){t.startObject(2)}static addMetadata(t,e){t.addFieldOffset(0,e,0)}static addComparisons(t,e){t.addFieldOffset(1,e,0)}static createComparisonsVector(t,e){t.startVector(4,e.length,4);for(let i=e.length-1;i>=0;i--)t.addOffset(e[i]);return t.endVector()}static startComparisonsVector(t,e){t.startVector(4,e,4)}static endHistoricalComparison(t){return t.endObject()}static createHistoricalComparison(t,e,i){return G.startHistoricalComparison(t),G.addMetadata(t,e),G.addComparisons(t,i),G.endHistoricalComparison(t)}}class k{bb=null;bb_pos=0;__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsHourWeatherConditions(t,e){return(e||new k).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsHourWeatherConditions(t,e){return t.setPosition(t.position()+4),(e||new k).__init(t.readInt32(t.position())+t.position(),t)}forecastStart(){const t=this.bb.__offset(this.bb_pos,4);return t?this.bb.readInt32(this.bb_pos+t):0}cloudCover(){const t=this.bb.__offset(this.bb_pos,6);return t?this.bb.readInt8(this.bb_pos+t):0}cloudCoverLowAltPct(){const t=this.bb.__offset(this.bb_pos,8);return t?this.bb.readInt8(this.bb_pos+t):0}cloudCoverMidAltPct(){const t=this.bb.__offset(this.bb_pos,10);return t?this.bb.readInt8(this.bb_pos+t):0}cloudCoverHighAltPct(){const t=this.bb.__offset(this.bb_pos,12);return t?this.bb.readInt8(this.bb_pos+t):0}conditionCode(){const t=this.bb.__offset(this.bb_pos,14);return t?this.bb.readInt8(this.bb_pos+t):N.CLEAR}daylight(){const t=this.bb.__offset(this.bb_pos,16);return!!t&&!!this.bb.readInt8(this.bb_pos+t)}humidity(){const t=this.bb.__offset(this.bb_pos,18);return t?this.bb.readInt8(this.bb_pos+t):0}perceivedPrecipitationIntensity(){const t=this.bb.__offset(this.bb_pos,20);return t?this.bb.readFloat32(this.bb_pos+t):0}precipitationAmount(){const t=this.bb.__offset(this.bb_pos,22);return t?this.bb.readFloat32(this.bb_pos+t):0}precipitationIntensity(){const t=this.bb.__offset(this.bb_pos,24);return t?this.bb.readFloat32(this.bb_pos+t):0}precipitationChance(){const t=this.bb.__offset(this.bb_pos,26);return t?this.bb.readInt8(this.bb_pos+t):0}precipitationType(){const t=this.bb.__offset(this.bb_pos,28);return t?this.bb.readInt8(this.bb_pos+t):m.CLEAR}pressure(){const t=this.bb.__offset(this.bb_pos,30);return t?this.bb.readFloat32(this.bb_pos+t):0}pressureTrend(){const t=this.bb.__offset(this.bb_pos,32);return t?this.bb.readInt8(this.bb_pos+t):y.RISING}snowfallAmount(){const t=this.bb.__offset(this.bb_pos,34);return t?this.bb.readFloat32(this.bb_pos+t):0}snowfallIntensity(){const t=this.bb.__offset(this.bb_pos,36);return t?this.bb.readFloat32(this.bb_pos+t):0}temperature(){const t=this.bb.__offset(this.bb_pos,38);return t?this.bb.readFloat32(this.bb_pos+t):0}temperatureApparent(){const t=this.bb.__offset(this.bb_pos,40);return t?this.bb.readFloat32(this.bb_pos+t):0}unknown20(){const t=this.bb.__offset(this.bb_pos,42);return t?this.bb.readFloat32(this.bb_pos+t):0}temperatureDewPoint(){const t=this.bb.__offset(this.bb_pos,44);return t?this.bb.readFloat32(this.bb_pos+t):0}uvIndex(){const t=this.bb.__offset(this.bb_pos,46);return t?this.bb.readInt8(this.bb_pos+t):0}visibility(){const t=this.bb.__offset(this.bb_pos,48);return t?this.bb.readFloat32(this.bb_pos+t):0}windDirection(){const t=this.bb.__offset(this.bb_pos,50);return t?this.bb.readInt16(this.bb_pos+t):0}windGust(){const t=this.bb.__offset(this.bb_pos,52);return t?this.bb.readFloat32(this.bb_pos+t):0}windSpeed(){const t=this.bb.__offset(this.bb_pos,54);return t?this.bb.readFloat32(this.bb_pos+t):0}static startHourWeatherConditions(t){t.startObject(26)}static addForecastStart(t,e){t.addFieldInt32(0,e,0)}static addCloudCover(t,e){t.addFieldInt8(1,e,0)}static addCloudCoverLowAltPct(t,e){t.addFieldInt8(2,e,0)}static addCloudCoverMidAltPct(t,e){t.addFieldInt8(3,e,0)}static addCloudCoverHighAltPct(t,e){t.addFieldInt8(4,e,0)}static addConditionCode(t,e){t.addFieldInt8(5,e,N.CLEAR)}static addDaylight(t,e){t.addFieldInt8(6,+e,0)}static addHumidity(t,e){t.addFieldInt8(7,e,0)}static addPerceivedPrecipitationIntensity(t,e){t.addFieldFloat32(8,e,0)}static addPrecipitationAmount(t,e){t.addFieldFloat32(9,e,0)}static addPrecipitationIntensity(t,e){t.addFieldFloat32(10,e,0)}static addPrecipitationChance(t,e){t.addFieldInt8(11,e,0)}static addPrecipitationType(t,e){t.addFieldInt8(12,e,m.CLEAR)}static addPressure(t,e){t.addFieldFloat32(13,e,0)}static addPressureTrend(t,e){t.addFieldInt8(14,e,y.RISING)}static addSnowfallAmount(t,e){t.addFieldFloat32(15,e,0)}static addSnowfallIntensity(t,e){t.addFieldFloat32(16,e,0)}static addTemperature(t,e){t.addFieldFloat32(17,e,0)}static addTemperatureApparent(t,e){t.addFieldFloat32(18,e,0)}static addUnknown20(t,e){t.addFieldFloat32(19,e,0)}static addTemperatureDewPoint(t,e){t.addFieldFloat32(20,e,0)}static addUvIndex(t,e){t.addFieldInt8(21,e,0)}static addVisibility(t,e){t.addFieldFloat32(22,e,0)}static addWindDirection(t,e){t.addFieldInt16(23,e,0)}static addWindGust(t,e){t.addFieldFloat32(24,e,0)}static addWindSpeed(t,e){t.addFieldFloat32(25,e,0)}static endHourWeatherConditions(t){return t.endObject()}static createHourWeatherConditions(t,e,i,s,a,o,n,r,d,b,c,h,p,u,_,l,f,m,y,N,A,F,I,O,T,w,g){return k.startHourWeatherConditions(t),k.addForecastStart(t,e),k.addCloudCover(t,i),k.addCloudCoverLowAltPct(t,s),k.addCloudCoverMidAltPct(t,a),k.addCloudCoverHighAltPct(t,o),k.addConditionCode(t,n),k.addDaylight(t,r),k.addHumidity(t,d),k.addPerceivedPrecipitationIntensity(t,b),k.addPrecipitationAmount(t,c),k.addPrecipitationIntensity(t,h),k.addPrecipitationChance(t,p),k.addPrecipitationType(t,u),k.addPressure(t,_),k.addPressureTrend(t,l),k.addSnowfallAmount(t,f),k.addSnowfallIntensity(t,m),k.addTemperature(t,y),k.addTemperatureApparent(t,N),k.addUnknown20(t,A),k.addTemperatureDewPoint(t,F),k.addUvIndex(t,I),k.addVisibility(t,O),k.addWindDirection(t,T),k.addWindGust(t,w),k.addWindSpeed(t,g),k.endHourWeatherConditions(t)}}class Y{bb=null;bb_pos=0;__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsHourlyForecastData(t,e){return(e||new Y).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsHourlyForecastData(t,e){return t.setPosition(t.position()+4),(e||new Y).__init(t.readInt32(t.position())+t.position(),t)}metadata(t){const e=this.bb.__offset(this.bb_pos,4);return e?(t||new C).__init(this.bb.__indirect(this.bb_pos+e),this.bb):null}hours(t,e){const i=this.bb.__offset(this.bb_pos,6);return i?(e||new k).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+i)+4*t),this.bb):null}hoursLength(){const t=this.bb.__offset(this.bb_pos,6);return t?this.bb.__vector_len(this.bb_pos+t):0}static startHourlyForecastData(t){t.startObject(2)}static addMetadata(t,e){t.addFieldOffset(0,e,0)}static addHours(t,e){t.addFieldOffset(1,e,0)}static createHoursVector(t,e){t.startVector(4,e.length,4);for(let i=e.length-1;i>=0;i--)t.addOffset(e[i]);return t.endVector()}static startHoursVector(t,e){t.startVector(4,e,4)}static endHourlyForecastData(t){return t.endObject()}static createHourlyForecastData(t,e,i){return Y.startHourlyForecastData(t),Y.addMetadata(t,e),Y.addHours(t,i),Y.endHourlyForecastData(t)}}class z{bb=null;bb_pos=0;__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsID(t,e){return(e||new z).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsID(t,e){return t.setPosition(t.position()+4),(e||new z).__init(t.readInt32(t.position())+t.position(),t)}uuid(t){const e=this.bb.__offset(this.bb_pos,4);return e?this.bb.__string(this.bb_pos+e,t):null}static startID(t){t.startObject(1)}static addUuid(t,e){t.addFieldOffset(0,e,0)}static endID(t){return t.endObject()}static createID(t,e){return z.startID(t),z.addUuid(t,e),z.endID(t)}}!function(t){t[t.NORMAL=0]="NORMAL",t[t.LOW=1]="LOW",t[t.HIGH=2]="HIGH",t[t.UNKNOWN3=3]="UNKNOWN3",t[t.UNKNOWN4=4]="UNKNOWN4",t[t.UNKNOWN5=5]="UNKNOWN5"}(F||(F={}));class Z{bb=null;bb_pos=0;__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsLocationInfo(t,e){return(e||new Z).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsLocationInfo(t,e){return t.setPosition(t.position()+4),(e||new Z).__init(t.readInt32(t.position())+t.position(),t)}metadata(t){const e=this.bb.__offset(this.bb_pos,4);return e?(t||new C).__init(this.bb.__indirect(this.bb_pos+e),this.bb):null}preciseName(t){const e=this.bb.__offset(this.bb_pos,6);return e?this.bb.__string(this.bb_pos+e,t):null}countryCode(t){const e=this.bb.__offset(this.bb_pos,8);return e?this.bb.__string(this.bb_pos+e,t):null}timeZone(t){const e=this.bb.__offset(this.bb_pos,10);return e?this.bb.__string(this.bb_pos+e,t):null}primaryName(t){const e=this.bb.__offset(this.bb_pos,12);return e?this.bb.__string(this.bb_pos+e,t):null}static startLocationInfo(t){t.startObject(5)}static addMetadata(t,e){t.addFieldOffset(0,e,0)}static addPreciseName(t,e){t.addFieldOffset(1,e,0)}static addCountryCode(t,e){t.addFieldOffset(2,e,0)}static addTimeZone(t,e){t.addFieldOffset(3,e,0)}static addPrimaryName(t,e){t.addFieldOffset(4,e,0)}static endLocationInfo(t){return t.endObject()}static createLocationInfo(t,e,i,s,a,o){return Z.startLocationInfo(t),Z.addMetadata(t,e),Z.addPreciseName(t,i),Z.addCountryCode(t,s),Z.addTimeZone(t,a),Z.addPrimaryName(t,o),Z.endLocationInfo(t)}}!function(t){t[t.UNKNOWN0=0]="UNKNOWN0",t[t.AIR_QUALITY_DETAILS=1]="AIR_QUALITY_DETAILS",t[t.UNKNOWN2=2]="UNKNOWN2",t[t.UNKNOWN3=3]="UNKNOWN3",t[t.UNKNOWN4=4]="UNKNOWN4",t[t.UNKNOWN5=5]="UNKNOWN5",t[t.UNKNOWN6=6]="UNKNOWN6",t[t.UNKNOWN7=7]="UNKNOWN7",t[t.UNKNOWN8=8]="UNKNOWN8",t[t.UNKNOWN9=9]="UNKNOWN9",t[t.UNKNOWN10=10]="UNKNOWN10",t[t.UNKNOWN11=11]="UNKNOWN11",t[t.UV_DETAILS=12]="UV_DETAILS",t[t.UNKNOWN13=13]="UNKNOWN13",t[t.UNKNOWN14=14]="UNKNOWN14",t[t.UNKNOWN15=15]="UNKNOWN15",t[t.UNKNOWN16=16]="UNKNOWN16",t[t.UNKNOWN17=17]="UNKNOWN17",t[t.UNKNOWN18=18]="UNKNOWN18"}(I||(I={}));class Q{bb=null;bb_pos=0;__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsPlacement(t,e){return(e||new Q).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsPlacement(t,e){return t.setPosition(t.position()+4),(e||new Q).__init(t.readInt32(t.position())+t.position(),t)}priority(){const t=this.bb.__offset(this.bb_pos,4);return t?this.bb.readInt8(this.bb_pos+t):0}articles(t,e){const i=this.bb.__offset(this.bb_pos,6);return i?(e||new U).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+i)+4*t),this.bb):null}articlesLength(){const t=this.bb.__offset(this.bb_pos,6);return t?this.bb.__vector_len(this.bb_pos+t):0}placement(){const t=this.bb.__offset(this.bb_pos,8);return t?this.bb.readInt8(this.bb_pos+t):I.UNKNOWN0}static startPlacement(t){t.startObject(3)}static addPriority(t,e){t.addFieldInt8(0,e,0)}static addArticles(t,e){t.addFieldOffset(1,e,0)}static createArticlesVector(t,e){t.startVector(4,e.length,4);for(let i=e.length-1;i>=0;i--)t.addOffset(e[i]);return t.endVector()}static startArticlesVector(t,e){t.startVector(4,e,4)}static addPlacement(t,e){t.addFieldInt8(2,e,I.UNKNOWN0)}static endPlacement(t){return t.endObject()}static createPlacement(t,e,i,s){return Q.startPlacement(t),Q.addPriority(t,e),Q.addArticles(t,i),Q.addPlacement(t,s),Q.endPlacement(t)}}class X{bb=null;bb_pos=0;__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsNews(t,e){return(e||new X).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsNews(t,e){return t.setPosition(t.position()+4),(e||new X).__init(t.readInt32(t.position())+t.position(),t)}metadata(t){const e=this.bb.__offset(this.bb_pos,4);return e?(t||new C).__init(this.bb.__indirect(this.bb_pos+e),this.bb):null}placements(t,e){const i=this.bb.__offset(this.bb_pos,6);return i?(e||new Q).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+i)+4*t),this.bb):null}placementsLength(){const t=this.bb.__offset(this.bb_pos,6);return t?this.bb.__vector_len(this.bb_pos+t):0}static startNews(t){t.startObject(2)}static addMetadata(t,e){t.addFieldOffset(0,e,0)}static addPlacements(t,e){t.addFieldOffset(1,e,0)}static createPlacementsVector(t,e){t.startVector(4,e.length,4);for(let i=e.length-1;i>=0;i--)t.addOffset(e[i]);return t.endVector()}static startPlacementsVector(t,e){t.startVector(4,e,4)}static endNews(t){return t.endObject()}static createNews(t,e,i){return X.startNews(t),X.addMetadata(t,e),X.addPlacements(t,i),X.endNews(t)}}class ${bb=null;bb_pos=0;__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsNextHourForecastData(t,e){return(e||new $).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsNextHourForecastData(t,e){return t.setPosition(t.position()+4),(e||new $).__init(t.readInt32(t.position())+t.position(),t)}metadata(t){const e=this.bb.__offset(this.bb_pos,4);return e?(t||new C).__init(this.bb.__indirect(this.bb_pos+e),this.bb):null}condition(t,e){const i=this.bb.__offset(this.bb_pos,6);return i?(e||new D).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+i)+4*t),this.bb):null}conditionLength(){const t=this.bb.__offset(this.bb_pos,6);return t?this.bb.__vector_len(this.bb_pos+t):0}summary(t,e){const i=this.bb.__offset(this.bb_pos,8);return i?(e||new j).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+i)+4*t),this.bb):null}summaryLength(){const t=this.bb.__offset(this.bb_pos,8);return t?this.bb.__vector_len(this.bb_pos+t):0}forecastStart(){const t=this.bb.__offset(this.bb_pos,10);return t?this.bb.readUint32(this.bb_pos+t):0}forecastEnd(){const t=this.bb.__offset(this.bb_pos,12);return t?this.bb.readUint32(this.bb_pos+t):0}minutes(t,e){const i=this.bb.__offset(this.bb_pos,14);return i?(e||new H).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+i)+4*t),this.bb):null}minutesLength(){const t=this.bb.__offset(this.bb_pos,14);return t?this.bb.__vector_len(this.bb_pos+t):0}static startNextHourForecastData(t){t.startObject(6)}static addMetadata(t,e){t.addFieldOffset(0,e,0)}static addCondition(t,e){t.addFieldOffset(1,e,0)}static createConditionVector(t,e){t.startVector(4,e.length,4);for(let i=e.length-1;i>=0;i--)t.addOffset(e[i]);return t.endVector()}static startConditionVector(t,e){t.startVector(4,e,4)}static addSummary(t,e){t.addFieldOffset(2,e,0)}static createSummaryVector(t,e){t.startVector(4,e.length,4);for(let i=e.length-1;i>=0;i--)t.addOffset(e[i]);return t.endVector()}static startSummaryVector(t,e){t.startVector(4,e,4)}static addForecastStart(t,e){t.addFieldInt32(3,e,0)}static addForecastEnd(t,e){t.addFieldInt32(4,e,0)}static addMinutes(t,e){t.addFieldOffset(5,e,0)}static createMinutesVector(t,e){t.startVector(4,e.length,4);for(let i=e.length-1;i>=0;i--)t.addOffset(e[i]);return t.endVector()}static startMinutesVector(t,e){t.startVector(4,e,4)}static endNextHourForecastData(t){return t.endObject()}static createNextHourForecastData(t,e,i,s,a,o,n){return $.startNextHourForecastData(t),$.addMetadata(t,e),$.addCondition(t,i),$.addSummary(t,s),$.addForecastStart(t,a),$.addForecastEnd(t,o),$.addMinutes(t,n),$.endNextHourForecastData(t)}}!function(t){t[t.UNKNOWN0=0]="UNKNOWN0",t[t.SHELTER=1]="SHELTER",t[t.EVACUATE=2]="EVACUATE",t[t.PREPARE=3]="PREPARE",t[t.EXECUTE=4]="EXECUTE",t[t.AVOID=5]="AVOID",t[t.MONITOR=6]="MONITOR",t[t.ACCESS=7]="ACCESS",t[t.ALLCLEAR=8]="ALLCLEAR",t[t.NONE=9]="NONE"}(O||(O={})),function(t){t[t.UNKNOWN=0]="UNKNOWN",t[t.EXTREME=1]="EXTREME",t[t.SEVERE=2]="SEVERE",t[t.MODERATE=3]="MODERATE",t[t.MINOR=4]="MINOR",t[t.UNKNOWN5=5]="UNKNOWN5"}(T||(T={})),function(t){t[t.UNKNOWN=0]="UNKNOWN",t[t.UNKNOWN1=1]="UNKNOWN1",t[t.UNKNOWN2=2]="UNKNOWN2",t[t.UNKNOWN3=3]="UNKNOWN3",t[t.UNKNOWN4=4]="UNKNOWN4",t[t.UNKNOWN5=5]="UNKNOWN5",t[t.UNKNOWN6=6]="UNKNOWN6",t[t.UNKNOWN7=7]="UNKNOWN7",t[t.UNKNOWN8=8]="UNKNOWN8",t[t.UNKNOWN9=9]="UNKNOWN9",t[t.STATEMENT=10]="STATEMENT",t[t.UNKNOWN11=11]="UNKNOWN11",t[t.ADVISORY=12]="ADVISORY",t[t.UNKNOWN13=13]="UNKNOWN13"}(w||(w={})),function(t){t[t.UNKNOWN=0]="UNKNOWN",t[t.IMMEDIATE=1]="IMMEDIATE",t[t.EXPECTED=2]="EXPECTED",t[t.FUTURE=3]="FUTURE",t[t.PAST=4]="PAST",t[t.UNKNOWN5=5]="UNKNOWN5"}(g||(g={}));class q{bb=null;bb_pos=0;__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsWeatherAlertSummary(t,e){return(e||new q).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsWeatherAlertSummary(t,e){return t.setPosition(t.position()+4),(e||new q).__init(t.readInt32(t.position())+t.position(),t)}id(t){const e=this.bb.__offset(this.bb_pos,4);return e?(t||new z).__init(this.bb.__indirect(this.bb_pos+e),this.bb):null}areaId(t){const e=this.bb.__offset(this.bb_pos,6);return e?this.bb.__string(this.bb_pos+e,t):null}unknown3(){const t=this.bb.__offset(this.bb_pos,8);return t?this.bb.readInt8(this.bb_pos+t):0}attributionUrl(t){const e=this.bb.__offset(this.bb_pos,10);return e?this.bb.__string(this.bb_pos+e,t):null}countryCode(t){const e=this.bb.__offset(this.bb_pos,12);return e?this.bb.__string(this.bb_pos+e,t):null}description(t){const e=this.bb.__offset(this.bb_pos,14);return e?this.bb.__string(this.bb_pos+e,t):null}token(t){const e=this.bb.__offset(this.bb_pos,16);return e?this.bb.__string(this.bb_pos+e,t):null}effectiveTime(){const t=this.bb.__offset(this.bb_pos,18);return t?this.bb.readUint32(this.bb_pos+t):0}expireTime(){const t=this.bb.__offset(this.bb_pos,20);return t?this.bb.readUint32(this.bb_pos+t):0}issuedTime(){const t=this.bb.__offset(this.bb_pos,22);return t?this.bb.readUint32(this.bb_pos+t):0}eventOnsetTime(){const t=this.bb.__offset(this.bb_pos,24);return t?this.bb.readUint32(this.bb_pos+t):0}eventEndTime(){const t=this.bb.__offset(this.bb_pos,26);return t?this.bb.readUint32(this.bb_pos+t):0}detailsUrl(t){const e=this.bb.__offset(this.bb_pos,28);return e?this.bb.__string(this.bb_pos+e,t):null}phenomenon(t){const e=this.bb.__offset(this.bb_pos,30);return e?this.bb.__string(this.bb_pos+e,t):null}severity(){const t=this.bb.__offset(this.bb_pos,32);return t?this.bb.readInt8(this.bb_pos+t):T.UNKNOWN}significance(){const t=this.bb.__offset(this.bb_pos,34);return t?this.bb.readInt8(this.bb_pos+t):w.UNKNOWN}source(t){const e=this.bb.__offset(this.bb_pos,36);return e?this.bb.__string(this.bb_pos+e,t):null}eventSource(t){const e=this.bb.__offset(this.bb_pos,38);return e?this.bb.__string(this.bb_pos+e,t):null}urgency(){const t=this.bb.__offset(this.bb_pos,40);return t?this.bb.readInt8(this.bb_pos+t):g.UNKNOWN}certainty(){const t=this.bb.__offset(this.bb_pos,42);return t?this.bb.readInt8(this.bb_pos+t):c.UNKNOWN}importance(){const t=this.bb.__offset(this.bb_pos,44);return t?this.bb.readInt8(this.bb_pos+t):F.NORMAL}responses(t){const e=this.bb.__offset(this.bb_pos,46);return e?this.bb.readInt8(this.bb.__vector(this.bb_pos+e)+t):0}responsesLength(){const t=this.bb.__offset(this.bb_pos,46);return t?this.bb.__vector_len(this.bb_pos+t):0}responsesArray(){const t=this.bb.__offset(this.bb_pos,46);return t?new Int8Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+t),this.bb.__vector_len(this.bb_pos+t)):null}unknown23(){const t=this.bb.__offset(this.bb_pos,48);return t?this.bb.readInt8(this.bb_pos+t):0}unknown24(){const t=this.bb.__offset(this.bb_pos,50);return t?this.bb.readInt8(this.bb_pos+t):0}static startWeatherAlertSummary(t){t.startObject(24)}static addId(t,e){t.addFieldOffset(0,e,0)}static addAreaId(t,e){t.addFieldOffset(1,e,0)}static addUnknown3(t,e){t.addFieldInt8(2,e,0)}static addAttributionUrl(t,e){t.addFieldOffset(3,e,0)}static addCountryCode(t,e){t.addFieldOffset(4,e,0)}static addDescription(t,e){t.addFieldOffset(5,e,0)}static addToken(t,e){t.addFieldOffset(6,e,0)}static addEffectiveTime(t,e){t.addFieldInt32(7,e,0)}static addExpireTime(t,e){t.addFieldInt32(8,e,0)}static addIssuedTime(t,e){t.addFieldInt32(9,e,0)}static addEventOnsetTime(t,e){t.addFieldInt32(10,e,0)}static addEventEndTime(t,e){t.addFieldInt32(11,e,0)}static addDetailsUrl(t,e){t.addFieldOffset(12,e,0)}static addPhenomenon(t,e){t.addFieldOffset(13,e,0)}static addSeverity(t,e){t.addFieldInt8(14,e,T.UNKNOWN)}static addSignificance(t,e){t.addFieldInt8(15,e,w.UNKNOWN)}static addSource(t,e){t.addFieldOffset(16,e,0)}static addEventSource(t,e){t.addFieldOffset(17,e,0)}static addUrgency(t,e){t.addFieldInt8(18,e,g.UNKNOWN)}static addCertainty(t,e){t.addFieldInt8(19,e,c.UNKNOWN)}static addImportance(t,e){t.addFieldInt8(20,e,F.NORMAL)}static addResponses(t,e){t.addFieldOffset(21,e,0)}static createResponsesVector(t,e){t.startVector(1,e.length,1);for(let i=e.length-1;i>=0;i--)t.addInt8(e[i]);return t.endVector()}static startResponsesVector(t,e){t.startVector(1,e,1)}static addUnknown23(t,e){t.addFieldInt8(22,e,0)}static addUnknown24(t,e){t.addFieldInt8(23,e,0)}static endWeatherAlertSummary(t){return t.endObject()}static createWeatherAlertSummary(t,e,i,s,a,o,n,r,d,b,c,h,p,u,_,l,f,m,y,N,A,F,I,O,T){return q.startWeatherAlertSummary(t),q.addId(t,e),q.addAreaId(t,i),q.addUnknown3(t,s),q.addAttributionUrl(t,a),q.addCountryCode(t,o),q.addDescription(t,n),q.addToken(t,r),q.addEffectiveTime(t,d),q.addExpireTime(t,b),q.addIssuedTime(t,c),q.addEventOnsetTime(t,h),q.addEventEndTime(t,p),q.addDetailsUrl(t,u),q.addPhenomenon(t,_),q.addSeverity(t,l),q.addSignificance(t,f),q.addSource(t,m),q.addEventSource(t,y),q.addUrgency(t,N),q.addCertainty(t,A),q.addImportance(t,F),q.addResponses(t,I),q.addUnknown23(t,O),q.addUnknown24(t,T),q.endWeatherAlertSummary(t)}}class J{bb=null;bb_pos=0;__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsWeatherAlertCollectionData(t,e){return(e||new J).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsWeatherAlertCollectionData(t,e){return t.setPosition(t.position()+4),(e||new J).__init(t.readInt32(t.position())+t.position(),t)}metadata(t){const e=this.bb.__offset(this.bb_pos,4);return e?(t||new C).__init(this.bb.__indirect(this.bb_pos+e),this.bb):null}detailsUrl(t){const e=this.bb.__offset(this.bb_pos,6);return e?this.bb.__string(this.bb_pos+e,t):null}alerts(t,e){const i=this.bb.__offset(this.bb_pos,8);return i?(e||new q).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+i)+4*t),this.bb):null}alertsLength(){const t=this.bb.__offset(this.bb_pos,8);return t?this.bb.__vector_len(this.bb_pos+t):0}static startWeatherAlertCollectionData(t){t.startObject(3)}static addMetadata(t,e){t.addFieldOffset(0,e,0)}static addDetailsUrl(t,e){t.addFieldOffset(1,e,0)}static addAlerts(t,e){t.addFieldOffset(2,e,0)}static createAlertsVector(t,e){t.startVector(4,e.length,4);for(let i=e.length-1;i>=0;i--)t.addOffset(e[i]);return t.endVector()}static startAlertsVector(t,e){t.startVector(4,e,4)}static endWeatherAlertCollectionData(t){return t.endObject()}static createWeatherAlertCollectionData(t,e,i,s){return J.startWeatherAlertCollectionData(t),J.addMetadata(t,e),J.addDetailsUrl(t,i),J.addAlerts(t,s),J.endWeatherAlertCollectionData(t)}}class tt{bb=null;bb_pos=0;__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsWeatherChanges(t,e){return(e||new tt).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsWeatherChanges(t,e){return t.setPosition(t.position()+4),(e||new tt).__init(t.readInt32(t.position())+t.position(),t)}metadata(t){const e=this.bb.__offset(this.bb_pos,4);return e?(t||new C).__init(this.bb.__indirect(this.bb_pos+e),this.bb):null}forecastStart(){const t=this.bb.__offset(this.bb_pos,6);return t?this.bb.readInt32(this.bb_pos+t):0}forecastEnd(){const t=this.bb.__offset(this.bb_pos,8);return t?this.bb.readInt32(this.bb_pos+t):0}changes(t,e){const i=this.bb.__offset(this.bb_pos,10);return i?(e||new W).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+i)+4*t),this.bb):null}changesLength(){const t=this.bb.__offset(this.bb_pos,10);return t?this.bb.__vector_len(this.bb_pos+t):0}static startWeatherChanges(t){t.startObject(4)}static addMetadata(t,e){t.addFieldOffset(0,e,0)}static addForecastStart(t,e){t.addFieldInt32(1,e,0)}static addForecastEnd(t,e){t.addFieldInt32(2,e,0)}static addChanges(t,e){t.addFieldOffset(3,e,0)}static createChangesVector(t,e){t.startVector(4,e.length,4);for(let i=e.length-1;i>=0;i--)t.addOffset(e[i]);return t.endVector()}static startChangesVector(t,e){t.startVector(4,e,4)}static endWeatherChanges(t){return t.endObject()}static createWeatherChanges(t,e,i,s,a){return tt.startWeatherChanges(t),tt.addMetadata(t,e),tt.addForecastStart(t,i),tt.addForecastEnd(t,s),tt.addChanges(t,a),tt.endWeatherChanges(t)}}class et{bb=null;bb_pos=0;__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsWeather(t,e){return(e||new et).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsWeather(t,e){return t.setPosition(t.position()+4),(e||new et).__init(t.readInt32(t.position())+t.position(),t)}airQuality(t){const e=this.bb.__offset(this.bb_pos,4);return e?(t||new x).__init(this.bb.__indirect(this.bb_pos+e),this.bb):null}currentWeather(t){const e=this.bb.__offset(this.bb_pos,6);return e?(t||new B).__init(this.bb.__indirect(this.bb_pos+e),this.bb):null}forecastDaily(t){const e=this.bb.__offset(this.bb_pos,8);return e?(t||new K).__init(this.bb.__indirect(this.bb_pos+e),this.bb):null}forecastHourly(t){const e=this.bb.__offset(this.bb_pos,10);return e?(t||new Y).__init(this.bb.__indirect(this.bb_pos+e),this.bb):null}forecastNextHour(t){const e=this.bb.__offset(this.bb_pos,12);return e?(t||new $).__init(this.bb.__indirect(this.bb_pos+e),this.bb):null}news(t){const e=this.bb.__offset(this.bb_pos,14);return e?(t||new X).__init(this.bb.__indirect(this.bb_pos+e),this.bb):null}weatherAlerts(t){const e=this.bb.__offset(this.bb_pos,16);return e?(t||new J).__init(this.bb.__indirect(this.bb_pos+e),this.bb):null}weatherChanges(t){const e=this.bb.__offset(this.bb_pos,18);return e?(t||new tt).__init(this.bb.__indirect(this.bb_pos+e),this.bb):null}historicalComparisons(t){const e=this.bb.__offset(this.bb_pos,20);return e?(t||new G).__init(this.bb.__indirect(this.bb_pos+e),this.bb):null}locationInfo(t){const e=this.bb.__offset(this.bb_pos,22);return e?(t||new Z).__init(this.bb.__indirect(this.bb_pos+e),this.bb):null}static startWeather(t){t.startObject(10)}static addAirQuality(t,e){t.addFieldOffset(0,e,0)}static addCurrentWeather(t,e){t.addFieldOffset(1,e,0)}static addForecastDaily(t,e){t.addFieldOffset(2,e,0)}static addForecastHourly(t,e){t.addFieldOffset(3,e,0)}static addForecastNextHour(t,e){t.addFieldOffset(4,e,0)}static addNews(t,e){t.addFieldOffset(5,e,0)}static addWeatherAlerts(t,e){t.addFieldOffset(6,e,0)}static addWeatherChanges(t,e){t.addFieldOffset(7,e,0)}static addHistoricalComparisons(t,e){t.addFieldOffset(8,e,0)}static addLocationInfo(t,e){t.addFieldOffset(9,e,0)}static endWeather(t){return t.endObject()}static finishWeatherBuffer(t,e){t.finish(e)}static finishSizePrefixedWeatherBuffer(t,e){t.finish(e,void 0,!0)}}class it{static Name="WeatherKit2";static Version="1.2.0";static encode(t,e="all",i={}){let s,a;switch(i?.metadata&&(a=C.createMetadata(t,t.createString(i?.metadata?.attributionUrl),i?.metadata?.expireTime,t.createString(i?.metadata?.language),i?.metadata?.latitude,i?.metadata?.longitude,t.createString(i?.metadata?.providerLogo),t.createString(i?.metadata?.providerName),i?.metadata?.readTime,i?.metadata?.reportedTime,i?.metadata?.temporarilyUnavailable,n[i?.metadata?.sourceType],i?.metadata?.unknown11,i?.metadata?.unknown12,i?.metadata?.unknown13,i?.metadata?.unknown14,i?.metadata?.unknown15)),e){case"all":const e={};i?.airQuality&&(e.airQualityOffset=this.encode(t,"airQuality",i.airQuality)),i?.currentWeather&&(e.currentWeatherOffset=this.encode(t,"currentWeather",i.currentWeather)),i?.forecastDaily&&(e.forecastDailyOffset=this.encode(t,"forecastDaily",i.forecastDaily)),i?.forecastHourly&&(e.forecastHourlyOffset=this.encode(t,"forecastHourly",i.forecastHourly)),i?.forecastNextHour&&(e.forecastNextHourOffset=this.encode(t,"forecastNextHour",i.forecastNextHour)),i?.news&&(e.newsOffset=this.encode(t,"news",i.news)),i?.weatherAlerts&&(e.weatherAlertsOffset=this.encode(t,"weatherAlerts",i.weatherAlerts)),i?.weatherChanges&&(e.weatherChangesOffset=this.encode(t,"weatherChanges",i.weatherChanges)),i?.historicalComparisons&&(e.historicalComparisonsOffset=this.encode(t,"historicalComparisons",i.historicalComparisons)),i?.locationInfo&&(e.locationInfoOffset=this.encode(t,"locationInfo",i.locationInfo)),s=it.createWeather(t,e.airQualityOffset,e.currentWeatherOffset,e.forecastDailyOffset,e.forecastHourlyOffset,e.forecastNextHourOffset,e.newsOffset,e.weatherAlertsOffset,e.weatherChangesOffset,e.historicalComparisonsOffset,e.locationInfoOffset);break;case"airQuality":let n=x.createPollutantsVector(t,i?.pollutants?.map((e=>v.createPollutant(t,r[e.pollutantType],e.amount,d[e.units])))),b=t.createString(i?.scale);s=x.createAirQuality(t,a,i?.categoryIndex,i?.index,i?.isSignificant,n,o[i?.previousDayComparison],r[i?.primaryPollutant],b);break;case"currentWeather":let S=B.createPrecipitationAmountNext1hByTypeVector(t,i?.precipitationAmountNext1hByType?.map((e=>R.createPrecipitationAmountByType(t,m[e.precipitationType],e.expected,e.minimumSnow,e.maximumSnow,e.expectedSnow)))),P=B.createPrecipitationAmountNext24hByTypeVector(t,i?.precipitationAmountNext24hByType?.map((e=>R.createPrecipitationAmountByType(t,m[e.precipitationType],e.expected,e.minimumSnow,e.maximumSnow,e.expectedSnow)))),C=B.createPrecipitationAmountNext6hByTypeVector(t,i?.precipitationAmountNext6hByType?.map((e=>R.createPrecipitationAmountByType(t,m[e.precipitationType],e.expected,e.minimumSnow,e.maximumSnow,e.expectedSnow)))),et=B.createPrecipitationAmountPrevious1hByTypeVector(t,i?.precipitationAmountPrevious1hByType?.map((e=>R.createPrecipitationAmountByType(t,m[e.precipitationType],e.expected,e.minimumSnow,e.maximumSnow,e.expectedSnow)))),st=B.createPrecipitationAmountPrevious24hByTypeVector(t,i?.precipitationAmountPrevious24hByType?.map((e=>R.createPrecipitationAmountByType(t,m[e.precipitationType],e.expected,e.minimumSnow,e.maximumSnow,e.expectedSnow)))),at=B.createPrecipitationAmountPrevious6hByTypeVector(t,i?.precipitationAmountPrevious6hByType?.map((e=>R.createPrecipitationAmountByType(t,m[e.precipitationType],e.expected,e.minimumSnow,e.maximumSnow,e.expectedSnow))));s=B.createCurrentWeatherData(t,a,i?.asOf,i?.cloudCover,i?.cloudCoverLowAltPct,i?.cloudCoverMidAltPct,i?.cloudCoverHighAltPct,N[i?.conditionCode],i?.daylight,i?.humidity,i?.perceivedPrecipitationIntensity,i?.precipitationAmount1h,i?.precipitationAmount6h,i?.precipitationAmount24h,i?.precipitationAmountNext1h,i?.precipitationAmountNext6h,i?.precipitationAmountNext24h,S,C,P,et,at,st,i?.precipitationIntensity,i?.pressure,y[i?.pressureTrend],i?.snowfallAmount1h,i?.snowfallAmount6h,i?.snowfallAmount24h,i?.snowfallAmountNext1h,i?.snowfallAmountNext6h,i?.snowfallAmountNext24h,i?.temperature,i?.temperatureApparent,i?.unknown34,i?.temperatureDewPoint,i?.uvIndex,i?.visibility,i?.windDirection,i?.windGust,i?.windSpeed);break;case"forecastDaily":let ot=i?.days?.map((e=>{const i={};return i.precipitationAmountByTypeOffest=V.createPrecipitationAmountByTypeVector(t,e?.precipitationAmountByType?.map((e=>R.createPrecipitationAmountByType(t,m[e.precipitationType],e.expected,e.minimumSnow,e.maximumSnow,e.expectedSnow)))),e?.daytimeForecast&&(i.daytimeForecastPrecipitationAmountByTypeOffest=L.createPrecipitationAmountByTypeVector(t,e?.daytimeForecast?.precipitationAmountByType?.map((e=>R.createPrecipitationAmountByType(t,m[e.precipitationType],e.expected,e.minimumSnow,e.maximumSnow,e.expectedSnow)))),i.daytimeForecastOffset=L.createDayPartForecast(t,e?.daytimeForecast?.forecastStart,e?.daytimeForecast?.forecastEnd,e?.daytimeForecast?.cloudCover,e?.daytimeForecast?.cloudCoverLowAltPct,e?.daytimeForecast?.cloudCoverMidAltPct,e?.daytimeForecast?.cloudCoverHighAltPct,N[e?.daytimeForecast?.conditionCode],e?.daytimeForecast?.humidity,e?.daytimeForecast?.humidityMax,e?.daytimeForecast?.humidityMin,e?.daytimeForecast?.precipitationAmount,i.daytimeForecastPrecipitationAmountByTypeOffest,e?.daytimeForecast?.precipitationChance,m[e?.daytimeForecast?.precipitationType],e?.daytimeForecast?.snowfallAmount,e?.daytimeForecast?.temperatureMax,e?.daytimeForecast?.temperatureMin,e?.daytimeForecast?.visibilityMax,e?.daytimeForecast?.visibilityMin,e?.daytimeForecast?.windDirection,e?.daytimeForecast?.windGustSpeedMax,e?.daytimeForecast?.windSpeed,e?.daytimeForecast?.windSpeedMax)),e?.overnightForecast&&(i.overnightForecastPrecipitationAmountByTypeOffest=L.createPrecipitationAmountByTypeVector(t,e?.overnightForecast?.precipitationAmountByType?.map((e=>R.createPrecipitationAmountByType(t,m[e.precipitationType],e.expected,e.minimumSnow,e.maximumSnow,e.expectedSnow)))),i.overnightForecastOffset=L.createDayPartForecast(t,e?.overnightForecast?.forecastStart,e?.overnightForecast?.forecastEnd,e?.overnightForecast?.cloudCover,e?.overnightForecast?.cloudCoverLowAltPct,e?.overnightForecast?.cloudCoverMidAltPct,e?.overnightForecast?.cloudCoverHighAltPct,N[e?.overnightForecast?.conditionCode],e?.overnightForecast?.humidity,e?.overnightForecast?.humidityMax,e?.overnightForecast?.humidityMin,e?.overnightForecast?.precipitationAmount,i.overnightForecastPrecipitationAmountByTypeOffest,e?.overnightForecast?.precipitationChance,m[e?.overnightForecast?.precipitationType],e?.overnightForecast?.snowfallAmount,e?.overnightForecast?.temperatureMax,e?.overnightForecast?.temperatureMin,e?.overnightForecast?.visibilityMax,e?.overnightForecast?.visibilityMin,e?.overnightForecast?.windDirection,e?.overnightForecast?.windGustSpeedMax,e?.overnightForecast?.windSpeed,e?.overnightForecast?.windSpeedMax)),e?.restOfDayForecast&&(i.restOfDayForecastPrecipitationAmountByTypeOffest=L.createPrecipitationAmountByTypeVector(t,e?.restOfDayForecast?.precipitationAmountByType?.map((e=>R.createPrecipitationAmountByType(t,m[e.precipitationType],e.expected,e.minimumSnow,e.maximumSnow,e.expectedSnow)))),i.restOfDayForecastOffset=L.createDayPartForecast(t,e?.restOfDayForecast?.forecastStart,e?.restOfDayForecast?.forecastEnd,e?.restOfDayForecast?.cloudCover,e?.restOfDayForecast?.cloudCoverLowAltPct,e?.restOfDayForecast?.cloudCoverMidAltPct,e?.restOfDayForecast?.cloudCoverHighAltPct,N[e?.restOfDayForecast?.conditionCode],e?.restOfDayForecast?.humidity,e?.restOfDayForecast?.humidityMax,e?.restOfDayForecast?.humidityMin,e?.restOfDayForecast?.precipitationAmount,i.restOfDayForecastPrecipitationAmountByTypeOffest,e?.restOfDayForecast?.precipitationChance,m[e?.restOfDayForecast?.precipitationType],e?.restOfDayForecast?.snowfallAmount,e?.restOfDayForecast?.temperatureMax,e?.restOfDayForecast?.temperatureMin,e?.restOfDayForecast?.visibilityMax,e?.restOfDayForecast?.visibilityMin,e?.restOfDayForecast?.windDirection,e?.restOfDayForecast?.windGustSpeedMax,e?.restOfDayForecast?.windSpeed,e?.restOfDayForecast?.windSpeedMax)),V.startDayWeatherConditions(t),V.addForecastStart(t,e?.forecastStart),V.addForecastEnd(t,e?.forecastEnd),V.addConditionCode(t,N[e?.conditionCode]),V.addHumidityMax(t,e?.humidityMax),V.addHumidityMin(t,e?.humidityMin),V.addMaxUvIndex(t,e?.maxUvIndex),V.addMoonPhase(t,A[e?.moonPhase]),V.addMoonrise(t,e?.moonrise),V.addMoonset(t,e?.moonset),V.addPrecipitationAmount(t,e?.precipitationAmount),V.addPrecipitationAmountByType(t,i.precipitationAmountByTypeOffest),V.addPrecipitationChance(t,e?.precipitationChance),V.addPrecipitationType(t,m[e?.precipitationType]),V.addSnowfallAmount(t,e?.snowfallAmount),V.addSolarMidnight(t,e?.solarMidnight),V.addSolarNoon(t,e?.solarNoon),V.addSunrise(t,e?.sunrise),V.addSunriseCivil(t,e?.sunriseCivil),V.addSunriseNautical(t,e?.sunriseNautical),V.addSunriseAstronomical(t,e?.sunriseAstronomical),V.addSunset(t,e?.sunset),V.addSunsetCivil(t,e?.sunsetCivil),V.addSunsetNautical(t,e?.sunsetNautical),V.addSunsetAstronomical(t,e?.sunsetAstronomical),V.addTemperatureMax(t,e?.temperatureMax),V.addTemperatureMaxTime(t,e?.temperatureMaxTime),V.addTemperatureMin(t,e?.temperatureMin),V.addTemperatureMinTime(t,e?.temperatureMinTime),V.addVisibilityMax(t,e?.visibilityMax),V.addVisibilityMin(t,e?.visibilityMin),V.addWindGustSpeedMax(t,e?.windGustSpeedMax),V.addWindSpeedAvg(t,e?.windSpeedAvg),V.addWindSpeedMax(t,e?.windSpeedMax),e?.daytimeForecast&&V.addDaytimeForecast(t,i.daytimeForecastOffset),e?.overnightForecast&&V.addOvernightForecast(t,i.overnightForecastOffset),e?.restOfDayForecast&&V.addRestOfDayForecast(t,i.restOfDayForecastOffset),V.endDayWeatherConditions(t)})),nt=K.createDaysVector(t,ot);s=K.createDailyForecastData(t,a,nt);break;case"forecastHourly":let rt=i?.hours?.map((e=>k.createHourWeatherConditions(t,e?.forecastStart,e?.cloudCover,e?.cloudCoverLowAltPct,e?.cloudCoverMidAltPct,e?.cloudCoverHighAltPct,N[e?.conditionCode],e?.daylight,e?.humidity,e?.perceivedPrecipitationIntensity,e?.precipitationAmount,e?.precipitationIntensity,e?.precipitationChance,m[e?.precipitationType],e?.pressure,y[e?.pressureTrend],e?.snowfallAmount,e?.snowfallIntensity,e?.temperature,e?.temperatureApparent,e?.unknown20,e?.temperatureDewPoint,e?.uvIndex,e?.visibility,e?.windDirection,e?.windGust,e?.windSpeed))),dt=Y.createHoursVector(t,rt);s=Y.createHourlyForecastData(t,a,dt);break;case"forecastNextHour":let bt=i?.condition?.map((e=>{let i=e?.parameters.map((e=>M.createParameter(t,f[e?.type],e?.date))),s=D.createParametersVector(t,i);return D.createCondition(t,e?.startTime,e?.endTime,l[e?.forecastToken],_[e?.beginCondition],_[e?.endCondition],s)})),ct=$.createConditionVector(t,bt),ht=i?.summary?.map((e=>j.createForecastPeriodSummary(t,e?.startTime,e?.endTime,m[e?.condition],e?.precipitationChance,e?.precipitationIntensity))),pt=$.createSummaryVector(t,ht),ut=i?.minutes?.map((e=>H.createForecastMinute(t,e?.startTime,e?.precipitationChance,e?.precipitationIntensity,e?.perceivedPrecipitationIntensity))),_t=$.createMinutesVector(t,ut);s=$.createNextHourForecastData(t,a,ct,pt,i?.forecastStart,i?.forecastEnd,_t);break;case"news":let lt=i?.placements?.map((e=>{let i=e?.articles?.map((e=>{let i=U.createAlertIdsVector(t,e?.alertIds?.map((e=>t.createString(e)))),s=t.createString(e?.headlineOverride),a=t.createString(e?.id),o=t.createString(e?.locale),n=U.createPhenomenaVector(t,e?.phenomena?.map((e=>t.createString(e)))),r=U.createSupportedStorefrontsVector(t,e?.supportedStorefronts?.map((e=>t.createString(e))));return U.createArticles(t,a,r,i,n,s,o)})),s=Q.createArticlesVector(t,i);return Q.createPlacement(t,e?.priority,s,I[e?.placement])})),ft=X.createPlacementsVector(t,lt);s=X.createNews(t,a,ft);break;case"weatherAlert":case"weatherAlerts":let mt=i?.alerts?.map((e=>{let i=e?.responses?.map((t=>O[t])),s=q.createResponsesVector(t,i),a=z.createID(t,t.createString(e?.id?.uuid)),o=t.createString(e?.areaId),n=t.createString(e?.attributionUrl),r=t.createString(e?.countryCode),d=t.createString(e?.description),b=t.createString(e?.token),h=t.createString(e?.detailsUrl),p=t.createString(e?.phenomenon),u=t.createString(e?.source),_=t.createString(e?.eventSource);return q.createWeatherAlertSummary(t,a,o,e?.unknown3,n,r,d,b,e?.effectiveTime,e?.expireTime,e?.issuedTime,e?.eventOnsetTime,e?.eventEndTime,h,p,T[e?.severity],w[e?.significance],u,_,g[e?.urgency],c[e?.certainty],F[e?.importance],s,e?.unknown23,e?.unknown24)})),yt=J.createAlertsVector(t,mt),Nt=t.createString(i?.detailsUrl);s=J.createWeatherAlertCollectionData(t,a,Nt,yt);break;case"weatherChange":case"weatherChanges":let At=i?.changes?.map((e=>W.createChange(t,e?.forecastStart,e?.forecastEnd,h[e?.maxTemperatureChange],h[e?.minTemperatureChange],h[e?.dayPrecipitationChange],h[e?.nightPrecipitationChange]))),Ft=tt.createChangesVector(t,At);s=tt.createWeatherChanges(t,a,i?.forecastStart,i?.forecastEnd,Ft);break;case"trendComparison":case"trendComparisons":case"historicalComparison":case"historicalComparisons":let It=i?.comparisons?.map((e=>E.createComparison(t,p[e?.condition],e?.currentValue,e?.baselineValue,u[e?.deviation],e?.baselineType,e?.baselineStartDate))),Ot=G.createComparisonsVector(t,It);s=G.createHistoricalComparison(t,a,Ot);break;case"locationInfo":s=Z.createLocationInfo(t,a,t.createString(i?.preciseName),t.createString(i?.countryCode),t.createString(i?.timeZone),t.createString(i?.primaryName))}return s}static decode(t,e="all",i={}){const s=et.getRootAsWeather(t),a=s?.airQuality(),b=s?.currentWeather(),S=s?.forecastDaily(),P=s?.forecastHourly(),C=s?.forecastNextHour(),v=s?.news(),x=s?.weatherAlerts(),U=s?.weatherChanges(),W=s?.historicalComparisons(),E=s?.locationInfo();switch(e){case"all":a&&(i.airQuality=this.decode(t,"airQuality",a)),b&&(i.currentWeather=this.decode(t,"currentWeather",b)),S&&(i.forecastDaily=this.decode(t,"forecastDaily",S)),P&&(i.forecastHourly=this.decode(t,"forecastHourly",P)),C&&(i.forecastNextHour=this.decode(t,"forecastNextHour",C)),v&&(i.news=this.decode(t,"news",v)),x&&(i.weatherAlerts=this.decode(t,"weatherAlerts",x)),U&&(i.weatherChanges=this.decode(t,"weatherChange",U)),W&&(i.historicalComparisons=this.decode(t,"trendComparison",W)),E&&(i.locationInfo=this.decode(t,"locationInfo",E));break;case"airQuality":i={metadata:this.decode(t,"metadata",a?.metadata()),categoryIndex:a?.categoryIndex(),index:a?.index(),isSignificant:a?.isSignificant(),pollutants:[],previousDayComparison:o[a?.previousDayComparison()],primaryPollutant:r[a?.primaryPollutant()],scale:a?.scale()};for(let t=0;t<a?.pollutantsLength();t++)i.pollutants.push({amount:a?.pollutants(t)?.amount(),pollutantType:r[a?.pollutants(t)?.pollutantType()],units:d[a?.pollutants(t)?.units()]});break;case"currentWeather":i={metadata:this.decode(t,"metadata",b?.metadata()),asOf:b?.asOf(),cloudCover:b?.cloudCover(),cloudCoverHighAltPct:b?.cloudCoverHighAltPct(),cloudCoverLowAltPct:b?.cloudCoverLowAltPct(),cloudCoverMidAltPct:b?.cloudCoverMidAltPct(),conditionCode:N[b?.conditionCode()],daylight:b?.daylight(),humidity:b?.humidity(),perceivedPrecipitationIntensity:b?.perceivedPrecipitationIntensity(),precipitationAmount1h:b?.precipitationAmount1h(),precipitationAmount24h:b?.precipitationAmount24h(),precipitationAmount6h:b?.precipitationAmount6h(),precipitationAmountNext1h:b?.precipitationAmountNext1h(),precipitationAmountNext1hByType:[],precipitationAmountNext24h:b?.precipitationAmountNext24h(),precipitationAmountNext24hByType:[],precipitationAmountNext6h:b?.precipitationAmountNext6h(),precipitationAmountNext6hByType:[],precipitationAmountPrevious1hByType:[],precipitationAmountPrevious24hByType:[],precipitationAmountPrevious6hByType:[],precipitationIntensity:b?.precipitationIntensity(),pressure:b?.pressure(),pressureTrend:y[b?.pressureTrend()],snowfallAmount1h:b?.snowfallAmount1h(),snowfallAmount24h:b?.snowfallAmount24h(),snowfallAmount6h:b?.snowfallAmount6h(),snowfallAmountNext1h:b?.snowfallAmountNext1h(),snowfallAmountNext24h:b?.snowfallAmountNext24h(),snowfallAmountNext6h:b?.snowfallAmountNext6h(),temperature:b?.temperature(),temperatureApparent:b?.temperatureApparent(),unknown34:b?.unknown34(),temperatureDewPoint:b?.temperatureDewPoint(),uvIndex:b?.uvIndex(),visibility:b?.visibility(),windDirection:b?.windDirection(),windGust:b?.windGust(),windSpeed:b?.windSpeed()};for(let t=0;t<b?.precipitationAmountNext1hByTypeLength();t++)i.precipitationAmountNext1hByType.push({expected:b?.precipitationAmountNext1hByType(t)?.expected(),expectedSnow:b?.precipitationAmountNext1hByType(t)?.expectedSnow(),maximumSnow:b?.precipitationAmountNext1hByType(t)?.maximumSnow(),minimumSnow:b?.precipitationAmountNext1hByType(t)?.minimumSnow(),precipitationType:m[b?.precipitationAmountNext1hByType(t)?.precipitationType()]});for(let t=0;t<b?.precipitationAmountNext24hByTypeLength();t++)i.precipitationAmountNext24hByType.push({expected:b?.precipitationAmountNext24hByType(t)?.expected(),expectedSnow:b?.precipitationAmountNext24hByType(t)?.expectedSnow(),maximumSnow:b?.precipitationAmountNext24hByType(t)?.maximumSnow(),minimumSnow:b?.precipitationAmountNext24hByType(t)?.minimumSnow(),precipitationType:m[b?.precipitationAmountNext24hByType(t)?.precipitationType()]});for(let t=0;t<b?.precipitationAmountNext6hByTypeLength();t++)i.precipitationAmountNext6hByType.push({expected:b?.precipitationAmountNext6hByType(t)?.expected(),expectedSnow:b?.precipitationAmountNext6hByType(t)?.expectedSnow(),maximumSnow:b?.precipitationAmountNext6hByType(t)?.maximumSnow(),minimumSnow:b?.precipitationAmountNext6hByType(t)?.minimumSnow(),precipitationType:m[b?.precipitationAmountNext6hByType(t)?.precipitationType()]});for(let t=0;t<b?.precipitationAmountPrevious1hByTypeLength();t++)i.precipitationAmountPrevious1hByType.push({expected:b?.precipitationAmountPrevious1hByType(t)?.expected(),expectedSnow:b?.precipitationAmountPrevious1hByType(t)?.expectedSnow(),maximumSnow:b?.precipitationAmountPrevious1hByType(t)?.maximumSnow(),minimumSnow:b?.precipitationAmountPrevious1hByType(t)?.minimumSnow(),precipitationType:m[b?.precipitationAmountPrevious1hByType(t)?.precipitationType()]});for(let t=0;t<b?.precipitationAmountPrevious24hByTypeLength();t++)i.precipitationAmountPrevious24hByType.push({expected:b?.precipitationAmountPrevious24hByType(t)?.expected(),expectedSnow:b?.precipitationAmountPrevious24hByType(t)?.expectedSnow(),maximumSnow:b?.precipitationAmountPrevious24hByType(t)?.maximumSnow(),minimumSnow:b?.precipitationAmountPrevious24hByType(t)?.minimumSnow(),precipitationType:m[b?.precipitationAmountPrevious24hByType(t)?.precipitationType()]});for(let t=0;t<b?.precipitationAmountPrevious6hByTypeLength();t++)i.precipitationAmountPrevious6hByType.push({expected:b?.precipitationAmountPrevious6hByType(t)?.expected(),expectedSnow:b?.precipitationAmountPrevious6hByType(t)?.expectedSnow(),maximumSnow:b?.precipitationAmountPrevious6hByType(t)?.maximumSnow(),minimumSnow:b?.precipitationAmountPrevious6hByType(t)?.minimumSnow(),precipitationType:m[b?.precipitationAmountPrevious6hByType(t)?.precipitationType()]});break;case"forecastDaily":i={metadata:this.decode(t,"metadata",S?.metadata()),days:[]};for(let t=0;t<S?.daysLength();t++){let e={conditionCode:N[S?.days(t)?.conditionCode()],forecastEnd:S?.days(t)?.forecastEnd(),forecastStart:S?.days(t)?.forecastStart(),humidityMax:S?.days(t)?.humidityMax(),humidityMin:S?.days(t)?.humidityMin(),maxUvIndex:S?.days(t)?.maxUvIndex(),moonPhase:A[S?.days(t)?.moonPhase()],moonrise:S?.days(t)?.moonrise(),moonset:S?.days(t)?.moonset(),precipitationAmount:S?.days(t)?.precipitationAmount(),precipitationAmountByType:[],precipitationChance:S?.days(t)?.precipitationChance(),precipitationType:m[S?.days(t)?.precipitationType()],snowfallAmount:S?.days(t)?.snowfallAmount(),solarMidnight:S?.days(t)?.solarMidnight(),solarNoon:S?.days(t)?.solarNoon(),sunrise:S?.days(t)?.sunrise(),sunriseCivil:S?.days(t)?.sunriseCivil(),sunriseNautical:S?.days(t)?.sunriseNautical(),sunriseAstronomical:S?.days(t)?.sunriseAstronomical(),sunset:S?.days(t)?.sunset(),sunsetCivil:S?.days(t)?.sunsetCivil(),sunsetNautical:S?.days(t)?.sunsetNautical(),sunsetAstronomical:S?.days(t)?.sunsetAstronomical(),temperatureMax:S?.days(t)?.temperatureMax(),temperatureMaxTime:S?.days(t)?.temperatureMaxTime(),temperatureMin:S?.days(t)?.temperatureMin(),temperatureMinTime:S?.days(t)?.temperatureMinTime(),visibilityMax:S?.days(t)?.visibilityMax(),visibilityMin:S?.days(t)?.visibilityMin(),windGustSpeedMax:S?.days(t)?.windGustSpeedMax(),windSpeedAvg:S?.days(t)?.windSpeedAvg(),windSpeedMax:S?.days(t)?.windSpeedMax()};for(let i=0;i<S?.days(t)?.precipitationAmountByTypeLength();i++)e.precipitationAmountByType.push({expected:S?.days(t)?.precipitationAmountByType(i)?.expected(),expectedSnow:S?.days(t)?.precipitationAmountByType(i)?.expectedSnow(),maximumSnow:S?.days(t)?.precipitationAmountByType(i)?.maximumSnow(),minimumSnow:S?.days(t)?.precipitationAmountByType(i)?.minimumSnow(),precipitationType:m[S?.days(t)?.precipitationAmountByType(i)?.precipitationType()]});if(S?.days(t)?.daytimeForecast()){e.daytimeForecast={cloudCover:S?.days(t)?.daytimeForecast()?.cloudCover(),cloudCoverHighAltPct:S?.days(t)?.daytimeForecast()?.cloudCoverHighAltPct(),cloudCoverLowAltPct:S?.days(t)?.daytimeForecast()?.cloudCoverLowAltPct(),cloudCoverMidAltPct:S?.days(t)?.daytimeForecast()?.cloudCoverMidAltPct(),conditionCode:N[S?.days(t)?.daytimeForecast()?.conditionCode()],forecastEnd:S?.days(t)?.daytimeForecast()?.forecastEnd(),forecastStart:S?.days(t)?.daytimeForecast()?.forecastStart(),humidity:S?.days(t)?.daytimeForecast()?.humidity(),humidityMax:S?.days(t)?.daytimeForecast()?.humidityMax(),humidityMin:S?.days(t)?.daytimeForecast()?.humidityMin(),precipitationAmount:S?.days(t)?.daytimeForecast()?.precipitationAmount(),precipitationAmountByType:[],precipitationChance:S?.days(t)?.daytimeForecast()?.precipitationChance(),precipitationType:m[S?.days(t)?.daytimeForecast()?.precipitationType()],snowfallAmount:S?.days(t)?.daytimeForecast()?.snowfallAmount(),temperatureMax:S?.days(t)?.daytimeForecast()?.temperatureMax(),temperatureMin:S?.days(t)?.daytimeForecast()?.temperatureMin(),visibilityMax:S?.days(t)?.daytimeForecast()?.visibilityMax(),visibilityMin:S?.days(t)?.daytimeForecast()?.visibilityMin(),windDirection:S?.days(t)?.daytimeForecast()?.windDirection(),windGustSpeedMax:S?.days(t)?.daytimeForecast()?.windGustSpeedMax(),windSpeed:S?.days(t)?.daytimeForecast()?.windSpeed(),windSpeedMax:S?.days(t)?.daytimeForecast()?.windSpeedMax()};for(let i=0;i<S?.days(t)?.daytimeForecast()?.precipitationAmountByTypeLength();i++)e.daytimeForecast.precipitationAmountByType.push({expected:S?.days(t)?.daytimeForecast()?.precipitationAmountByType(i)?.expected(),expectedSnow:S?.days(t)?.daytimeForecast()?.precipitationAmountByType(i)?.expectedSnow(),maximumSnow:S?.days(t)?.daytimeForecast()?.precipitationAmountByType(i)?.maximumSnow(),minimumSnow:S?.days(t)?.daytimeForecast()?.precipitationAmountByType(i)?.minimumSnow(),precipitationType:m[S?.days(t)?.daytimeForecast()?.precipitationAmountByType(i)?.precipitationType()]})}if(S?.days(t)?.overnightForecast()){e.overnightForecast={cloudCover:S?.days(t)?.overnightForecast()?.cloudCover(),cloudCoverHighAltPct:S?.days(t)?.overnightForecast()?.cloudCoverHighAltPct(),cloudCoverLowAltPct:S?.days(t)?.overnightForecast()?.cloudCoverLowAltPct(),cloudCoverMidAltPct:S?.days(t)?.overnightForecast()?.cloudCoverMidAltPct(),conditionCode:N[S?.days(t)?.overnightForecast()?.conditionCode()],forecastEnd:S?.days(t)?.overnightForecast()?.forecastEnd(),forecastStart:S?.days(t)?.overnightForecast()?.forecastStart(),humidity:S?.days(t)?.overnightForecast()?.humidity(),humidityMax:S?.days(t)?.overnightForecast()?.humidityMax(),humidityMin:S?.days(t)?.overnightForecast()?.humidityMin(),precipitationAmount:S?.days(t)?.overnightForecast()?.precipitationAmount(),precipitationAmountByType:[],precipitationChance:S?.days(t)?.overnightForecast()?.precipitationChance(),precipitationType:m[S?.days(t)?.overnightForecast()?.precipitationType()],snowfallAmount:S?.days(t)?.overnightForecast()?.snowfallAmount(),temperatureMax:S?.days(t)?.overnightForecast()?.temperatureMax(),temperatureMin:S?.days(t)?.overnightForecast()?.temperatureMin(),visibilityMax:S?.days(t)?.overnightForecast()?.visibilityMax(),visibilityMin:S?.days(t)?.overnightForecast()?.visibilityMin(),windDirection:S?.days(t)?.overnightForecast()?.windDirection(),windGustSpeedMax:S?.days(t)?.overnightForecast()?.windGustSpeedMax(),windSpeed:S?.days(t)?.overnightForecast()?.windSpeed(),windSpeedMax:S?.days(t)?.overnightForecast()?.windSpeedMax()};for(let i=0;i<S?.days(t)?.overnightForecast()?.precipitationAmountByTypeLength();i++)e.overnightForecast.precipitationAmountByType.push({expected:S?.days(t)?.overnightForecast()?.precipitationAmountByType(i)?.expected(),expectedSnow:S?.days(t)?.overnightForecast()?.precipitationAmountByType(i)?.expectedSnow(),maximumSnow:S?.days(t)?.overnightForecast()?.precipitationAmountByType(i)?.maximumSnow(),minimumSnow:S?.days(t)?.overnightForecast()?.precipitationAmountByType(i)?.minimumSnow(),precipitationType:m[S?.days(t)?.overnightForecast()?.precipitationAmountByType(i)?.precipitationType()]})}if(S?.days(t)?.restOfDayForecast()){e.restOfDayForecast={cloudCover:S?.days(t)?.restOfDayForecast()?.cloudCover(),cloudCoverHighAltPct:S?.days(t)?.restOfDayForecast()?.cloudCoverHighAltPct(),cloudCoverLowAltPct:S?.days(t)?.restOfDayForecast()?.cloudCoverLowAltPct(),cloudCoverMidAltPct:S?.days(t)?.restOfDayForecast()?.cloudCoverMidAltPct(),conditionCode:N[S?.days(t)?.restOfDayForecast()?.conditionCode()],forecastEnd:S?.days(t)?.restOfDayForecast()?.forecastEnd(),forecastStart:S?.days(t)?.restOfDayForecast()?.forecastStart(),humidity:S?.days(t)?.restOfDayForecast()?.humidity(),humidityMax:S?.days(t)?.restOfDayForecast()?.humidityMax(),humidityMin:S?.days(t)?.restOfDayForecast()?.humidityMin(),precipitationAmount:S?.days(t)?.restOfDayForecast()?.precipitationAmount(),precipitationAmountByType:[],precipitationChance:S?.days(t)?.restOfDayForecast()?.precipitationChance(),precipitationType:m[S?.days(t)?.restOfDayForecast()?.precipitationType()],snowfallAmount:S?.days(t)?.restOfDayForecast()?.snowfallAmount(),temperatureMax:S?.days(t)?.restOfDayForecast()?.temperatureMax(),temperatureMin:S?.days(t)?.restOfDayForecast()?.temperatureMin(),visibilityMax:S?.days(t)?.restOfDayForecast()?.visibilityMax(),visibilityMin:S?.days(t)?.restOfDayForecast()?.visibilityMin(),windDirection:S?.days(t)?.restOfDayForecast()?.windDirection(),windGustSpeedMax:S?.days(t)?.restOfDayForecast()?.windGustSpeedMax(),windSpeed:S?.days(t)?.restOfDayForecast()?.windSpeed(),windSpeedMax:S?.days(t)?.restOfDayForecast()?.windSpeedMax()};for(let i=0;i<S?.days(t)?.restOfDayForecast()?.precipitationAmountByTypeLength();i++)e.restOfDayForecast.precipitationAmountByType.push({expected:S?.days(t)?.restOfDayForecast()?.precipitationAmountByType(i)?.expected(),expectedSnow:S?.days(t)?.restOfDayForecast()?.precipitationAmountByType(i)?.expectedSnow(),maximumSnow:S?.days(t)?.restOfDayForecast()?.precipitationAmountByType(i)?.maximumSnow(),minimumSnow:S?.days(t)?.restOfDayForecast()?.precipitationAmountByType(i)?.minimumSnow(),precipitationType:m[S?.days(t)?.restOfDayForecast()?.precipitationAmountByType(i)?.precipitationType()]})}i.days.push(e)}break;case"forecastHourly":i={metadata:this.decode(t,"metadata",P?.metadata()),hours:[]};for(let t=0;t<P?.hoursLength();t++)i.hours.push({cloudCover:P?.hours(t)?.cloudCover(),cloudCoverHighAltPct:P?.hours(t)?.cloudCoverHighAltPct(),cloudCoverLowAltPct:P?.hours(t)?.cloudCoverLowAltPct(),cloudCoverMidAltPct:P?.hours(t)?.cloudCoverMidAltPct(),conditionCode:N[P?.hours(t)?.conditionCode()],daylight:P?.hours(t)?.daylight(),forecastStart:P?.hours(t)?.forecastStart(),humidity:P?.hours(t)?.humidity(),perceivedPrecipitationIntensity:P?.hours(t)?.perceivedPrecipitationIntensity(),precipitationAmount:P?.hours(t)?.precipitationAmount(),precipitationChance:P?.hours(t)?.precipitationChance(),precipitationIntensity:P?.hours(t)?.precipitationIntensity(),precipitationType:m[P?.hours(t)?.precipitationType()],pressure:P?.hours(t)?.pressure(),pressureTrend:y[P?.hours(t)?.pressureTrend()],snowfallAmount:P?.hours(t)?.snowfallAmount(),snowfallIntensity:P?.hours(t)?.snowfallIntensity(),temperature:P?.hours(t)?.temperature(),temperatureApparent:P?.hours(t)?.temperatureApparent(),unknown20:P?.hours(t)?.unknown20(),temperatureDewPoint:P?.hours(t)?.temperatureDewPoint(),uvIndex:P?.hours(t)?.uvIndex(),visibility:P?.hours(t)?.visibility(),windDirection:P?.hours(t)?.windDirection(),windGust:P?.hours(t)?.windGust(),windSpeed:P?.hours(t)?.windSpeed()});break;case"forecastNextHour":i={metadata:this.decode(t,"metadata",C?.metadata()),condition:[],forecastEnd:C?.forecastEnd(),forecastStart:C?.forecastStart(),minutes:[],summary:[]};for(let t=0;t<C?.conditionLength();t++){let e={beginCondition:_[C?.condition(t)?.beginCondition()],endCondition:_[C?.condition(t)?.endCondition()],endTime:C?.condition(t)?.endTime(),forecastToken:l[C?.condition(t)?.forecastToken()],parameters:[],startTime:C?.condition(t)?.startTime()};for(let i=0;i<C?.condition(t)?.parametersLength();i++)e.parameters.push({date:C?.condition(t)?.parameters(i)?.date(),type:f[C?.condition(t)?.parameters(i)?.type()]});i.condition.push(e)}for(let t=0;t<C?.minutesLength();t++)i.minutes.push({perceivedPrecipitationIntensity:C?.minutes(t)?.perceivedPrecipitationIntensity(),precipitationChance:C?.minutes(t)?.precipitationChance(),precipitationIntensity:C?.minutes(t)?.precipitationIntensity(),startTime:C?.minutes(t)?.startTime()});for(let t=0;t<C?.summaryLength();t++)i.summary.push({condition:m[C?.summary(t)?.condition()],endTime:C?.summary(t)?.endTime(),precipitationChance:C?.summary(t)?.precipitationChance(),precipitationIntensity:C?.summary(t)?.precipitationIntensity(),startTime:C?.summary(t)?.startTime()});break;case"metadata":i={attributionUrl:i?.attributionUrl(),expireTime:i?.expireTime(),language:i?.language(),latitude:i?.latitude(),longitude:i?.longitude(),providerLogo:i?.providerLogo(),providerName:i?.providerName(),readTime:i?.readTime(),reportedTime:i?.reportedTime(),temporarilyUnavailable:i?.temporarilyUnavailable(),sourceType:n[i?.sourceType()]};break;case"news":i={metadata:this.decode(t,"metadata",v?.metadata()),placements:[]};for(let t=0;t<v?.placementsLength();t++){let e={articles:[],placement:I[v?.placements(t)?.placement()],priority:v?.placements(t)?.priority()};for(let i=0;i<v?.placements(t)?.articlesLength();i++){let s={alertIds:[],headlineOverride:v?.placements(t)?.articles(i)?.headlineOverride(),id:v?.placements(t)?.articles(i)?.id(),locale:v?.placements(t)?.articles(i)?.locale(),phenomena:[],supportedStorefronts:[]};for(let e=0;e<v?.placements(t)?.articles(i)?.alertIdsLength();e++)s.alertIds.push(v?.placements(t)?.articles(i)?.alertIds(e));for(let e=0;e<v?.placements(t)?.articles(i)?.phenomenaLength();e++)s.phenomena.push(v?.placements(t)?.articles(i)?.phenomena(e));for(let e=0;e<v?.placements(t)?.articles(i)?.supportedStorefrontsLength();e++)s.supportedStorefronts.push(v?.placements(t)?.articles(i)?.supportedStorefronts(e));e.articles.push(s)}i.placements.push(e)}break;case"weatherAlert":case"weatherAlerts":i={metadata:this.decode(t,"metadata",x?.metadata()),alerts:[],detailsUrl:x?.detailsUrl()};for(let t=0;t<x?.alertsLength();t++){let e={areaId:x?.alerts(t)?.areaId(),attributionUrl:x?.alerts(t)?.attributionUrl(),certainty:c[x?.alerts(t)?.certainty()],countryCode:x?.alerts(t)?.countryCode(),description:x?.alerts(t)?.description(),detailsUrl:x?.alerts(t)?.detailsUrl(),effectiveTime:x?.alerts(t)?.effectiveTime(),eventEndTime:x?.alerts(t)?.eventEndTime(),eventOnsetTime:x?.alerts(t)?.eventOnsetTime(),eventSource:x?.alerts(t)?.eventSource(),expireTime:x?.alerts(t)?.expireTime(),id:{uuid:x?.alerts(t)?.id()?.uuid()},importance:F[x?.alerts(t)?.importance()],issuedTime:x?.alerts(t)?.issuedTime(),phenomenon:x?.alerts(t)?.phenomenon(),responses:[],severity:T[x?.alerts(t)?.severity()],significance:w[x?.alerts(t)?.significance()],source:x?.alerts(t)?.source(),token:x?.alerts(t)?.token(),unknown3:x?.alerts(t)?.unknown3(),urgency:g[x?.alerts(t)?.urgency()]};for(let i=0;i<x?.alerts(t)?.responsesLength();i++)e.responses.push(O[x?.alerts(t)?.responses(i)]);i.alerts.push(e)}break;case"weatherChange":case"weatherChanges":i={metadata:this.decode(t,"metadata",U?.metadata()),changes:[],forecastEnd:U?.forecastEnd(),forecastStart:U?.forecastStart()};for(let t=0;t<U?.changesLength();t++){let e={dayPrecipitationChange:h[U?.changes(t)?.dayPrecipitationChange()],forecastEnd:U?.changes(t)?.forecastEnd(),forecastStart:U?.changes(t)?.forecastStart(),maxTemperatureChange:h[U?.changes(t)?.maxTemperatureChange()],minTemperatureChange:h[U?.changes(t)?.minTemperatureChange()],nightPrecipitationChange:h[U?.changes(t)?.nightPrecipitationChange()]};i.changes.push(e)}break;case"trendComparison":case"trendComparisons":case"historicalComparison":case"historicalComparisons":i={metadata:this.decode(t,"metadata",W?.metadata()),comparisons:[]};for(let t=0;t<W?.comparisonsLength();t++){let e={baselineStartDate:W?.comparisons(t)?.baselineStartDate(),baselineType:W?.comparisons(t)?.baselineType(),baselineValue:W?.comparisons(t)?.baselineValue(),condition:p[W?.comparisons(t)?.condition()],currentValue:W?.comparisons(t)?.currentValue(),deviation:u[W?.comparisons(t)?.deviation()]};i.comparisons.push(e)}break;case"locationInfo":i={metadata:this.decode(t,"metadata",E?.metadata()),countryCode:E?.countryCode(),preciseName:E?.preciseName(),primaryName:E?.primaryName(),timeZone:E?.timeZone()}}return i}static createWeather(t,e,i,s,a,o,n,r,d,b,c){return et.startWeather(t),e&&et.addAirQuality(t,e),i&&et.addCurrentWeather(t,i),s&&et.addForecastDaily(t,s),a&&et.addForecastHourly(t,a),o&&et.addForecastNextHour(t,o),n&&et.addNews(t,n),r&&et.addWeatherAlerts(t,r),d&&et.addWeatherChanges(t,d),b&&et.addHistoricalComparisons(t,b),c&&et.addLocationInfo(t,c),et.endWeather(t)}}try{const t=new URL($request.url);console.log(`⚠ url: ${t.toJSON()}`,"");const e=$request.method,i=t.hostname,s=t.pathname,a=t.pathname.split("/").filter(Boolean),o=($response.headers?.["Content-Type"]??$response.headers?.["content-type"])?.split(";")?.[0];if(console.log(`⚠ METHOD: ${e}, HOST: ${i}, PATH: ${s}, PATHs: ${a}, FORMAT: ${o}`),"application/json"===o||"text/json"===o)body=JSON.parse($response.body??"{}"),console.log(body),$done({body:JSON.stringify(body)});else if("application/vnd.apple.flatbuffer"===o){const t=new S($response.body),e=new P;let i=it.decode(t,"all");console.log(i);const s=it.encode(e,"all",i);e.finish(s);let a=e.asUint8Array();$done({body:a})}else $done($response)}catch(t){console.log("執行時發生錯誤",t)}finally{$done($response)}
